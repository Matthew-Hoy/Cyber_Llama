@{
    ViewBag.Title = "Home Page";
}
@model List<CyberLlamaConsumerSite.CRUDService.c_ProductPageInfo>
@using CyberLlamaConsumerSite.ServiceReference1;
<div class="sidenav">
    <input value="Sort by Price" class="FilterButton" style="float:left;" onclick="location.href='@Url.Action("Index", "Home", new {filter ="price"})'" />
    <input value="Sort by Name" class="FilterButton" style="float:left;" onclick="location.href='@Url.Action("Index", "Home", new {filter = "name"})'" />
    <input value="Sort by Discount" class="FilterButton" style="float:left;" onclick="location.href='@Url.Action("Index", "Home", new {filter = "discount"})'" />
</div>
<style>

    .slideshowContainer {
        position: relative;
        overflow: visible;
        margin: 50px 0 75px;
        width: 100%;
        height: 500px;
    }

    .imageSlides {
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        min-width: 100%;
        min-height: 100%;
        opacity: 0;
        transition: opacity 1s ease-in-out;
        z-index: -1;
    }

    /* add 'visible' class via Javascript */
    .visible {
        opacity: 1;
    }

    .slideshowArrow {
        font-size: 7em;
        color: rgba(255, 255, 255, 0.5);
        cursor: pointer;
        transition: opacity 0.2s ease-in-out;
    }

        .slideshowArrow:hover {
            opacity: 0.75;
        }

    #leftArrow {
        position: absolute;
        left: 4%;
        top: 50%;
        transform: translate(-50%, -50%);
    }

    #rightArrow {
        position: absolute;
        right: 4%;
        top: 50%;
        transform: translate(50%, -50%);
    }

    .slideshowCircles {
        position: absolute;
        bottom: 2%;
        left: 50%;
        transform: translate(-50%, -50%);
        text-align: center;
    }

    .circle {
        display: inline-block;
        margin-left: 3px;
        margin-right: 3px;
        width: 15px;
        height: 15px;
        border-radius: 50%;
        border: solid 2px rgba(255, 255, 255, 0.5);
        transition: 1s ease-in-out;
    }

    .dot {
        background-color: rgba(255, 255, 255, 0.7);
        border: solid 2px rgba(255, 255, 255, 0.5);
    }
</style>

<hr />
<h1 style="text-align:center">Welcome to CyberLlamas!</h1>
<p style="text-align:center">A newly opened computer retailer, that simply makes your life easier!</p>
<p style="text-align:center">Welcome to the Cyber Family!</p>

<div class="slideshowContainer">
    <img class="imageSlides" src="~/Images/custombuilt_banner.jpg" alt="beach side city view">
    <img class="imageSlides" src="~/Images/rtxlaptop_banner.jpg" alt="leaf on the ground">
    <img class="imageSlides" src="~/Images/nvidiartx_banner.png" alt="lake surrounded by mountains">
    <img class="imageSlides" src="~/Images/nvidiartx2080_banner.jpg" alt="opb">

    <span id="leftArrow" class="slideshowArrow">&#8249;</span>
    <span id="rightArrow" class="slideshowArrow">&#8250;</span>
    <div class="slideshowCircles">
        <span class="circle dot"></span>
        <span class="circle"></span>
        <span class="circle"></span>
        <span class="circle"></span>
    </div>

</div>
<div style="margin-left:100px;">
    @{



        if (Model.Count == 0)
        {
            <h1 style="text-align:center">Woops!</h1>
            <p style="text-align:center">You caught us, we have no products of this kind in stock...</p>
            <hr />
            <img src="~/Images/woops.png" alt="llama" class="llamaImage" />
            <hr />
            <p style="text-align:center">Hold on! Products are on there way!</p>
        }
    }

    @{
        <hr />
        foreach (var p in Model)
        {
            String imageLink = p.image;
            String model = p.model;
            decimal price = Math.Round(p.price,2);
            int quantity = p.Quantity;
            int discount = p.discount;

            <div class="card" style=" width: 280px; height: 400px;margin: 0 auto;border:1px solid white;margin:10px">
                <div style="width:280px;height:180px;">
                    <img class="centerCataloqueImage" src="@(imageLink)" alt="Ram" style="width:100%">
                </div>
                <div style="width:280px;height:70px;">
                    <h3><a href="@Url.Action("Index", "PartInfo", new {id=p.ID})">@(model)</a></h3>
                </div>
                <p class="price">R@(price)</p>
                <p style="margin-bottom:1px;">Quantity: @(quantity)</p>
                <p style="margin-top:1px;margin-bottom:1px;">Discount: @(discount)%</p>
                <p><button class="addCartLink" href=@Url.Action("AddToCart", new { ID = p.ID })>Add to Cart</button></p>
            </div>
        }
    }

</div>

<div class="toasterCartSuccess">Item Added to Cart</div>
<div class="toasterCartError">Unable to add item to cart</div>

<script>
    $(".addCartLink").click(function (e) {
        e.preventDefault();
        $.ajax({
            url: $(this).attr("href"),
            success: function () {
                var x = document.getElementsByClassName("toasterCartSuccess");
                x[0].className += " show";
                setTimeout(function () { x[0].className = x[0].className.replace("show", ""); }, 3000);
            },
            error: function () {
                var x = document.getElementsByClassName("toasterCartError");
                x[0].className += " show";
                setTimeout(function () { x[0].className = x[0].className.replace("show", ""); }, 3000);
            }

        });
    });

    window.addEventListener("scroll", function () {
        var target = document.getElementsByClassName('sidenav');
        if (window.pageYOffset > 650) {
            target[0].style.display = "block";
        }
        else if (window.pageYOffset < 650) {
            target[0].style.display = "none";
        }
    }, false);

</script>

<style>

    .card h3 {
        color: black;
    }

    .card p {
        color: black;
    }

    .llamaImage {
        display: block;
        margin-left: auto;
        margin-right: auto;
        height: auto;
        width: 15%;
    }

    .card {
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
        max-width: 300px;
        margin: auto;
        text-align: center;
        font-family: arial;
        display: inline-block;
    }

    .price {
        color: grey;
        font-size: 22px;
        margin-bottom: 1px;
        margin-top: 1px;
    }

    .card button {
        border: none;
        outline: 0;
        padding: 12px;
        color: white;
        background-color: #000;
        text-align: center;
        cursor: pointer;
        width: 100%;
        font-size: 18px;
    }

        .card button:hover {
            opacity: 0.7;
        }

    .card img {
        max-height: 180px;
        max-width: 278px;
        height: auto;
        width: auto;
    }
</style>



<script>
    // IMAGE SLIDES & CIRCLES ARRAYS, & COUNTER
    var imageSlides = document.getElementsByClassName('imageSlides');
    var circles = document.getElementsByClassName('circle');
    var leftArrow = document.getElementById('leftArrow');
    var rightArrow = document.getElementById('rightArrow');
    var counter = 0;

    // HIDE ALL IMAGES FUNCTION
    function hideImages() {
        for (var i = 0; i < imageSlides.length; i++) {
            imageSlides[i].classList.remove('visible');
        }
    }

    // REMOVE ALL DOTS FUNCTION
    function removeDots() {
        for (var i = 0; i < imageSlides.length; i++) {
            circles[i].classList.remove('dot');
        }
    }

    // SINGLE IMAGE LOOP/CIRCLES FUNCTION
    function imageLoop() {
        var currentImage = imageSlides[counter];
        var currentDot = circles[counter];
        currentImage.classList.add('visible');
        removeDots();
        currentDot.classList.add('dot');
        counter++;
    }

    // LEFT & RIGHT ARROW FUNCTION & CLICK EVENT LISTENERS
    function arrowClick(e) {
        var target = e.target;
        if (target == leftArrow) {
            clearInterval(imageSlideshowInterval);
            hideImages();
            removeDots();
            if (counter == 1) {
                counter = (imageSlides.length - 1);
                imageLoop();
                imageSlideshowInterval = setInterval(slideshow, 10000);
            } else {
                counter--;
                counter--;
                imageLoop();
                imageSlideshowInterval = setInterval(slideshow, 10000);
            }
        }
        else if (target == rightArrow) {
            clearInterval(imageSlideshowInterval);
            hideImages();
            removeDots();
            if (counter == imageSlides.length) {
                counter = 0;
                imageLoop();
                imageSlideshowInterval = setInterval(slideshow, 10000);
            } else {
                imageLoop();
                imageSlideshowInterval = setInterval(slideshow, 10000);
            }
        }
    }

    leftArrow.addEventListener('click', arrowClick);
    rightArrow.addEventListener('click', arrowClick);


    // IMAGE SLIDE FUNCTION
    function slideshow() {
        if (counter < imageSlides.length) {
            imageLoop();
        } else {
            counter = 0;
            hideImages();
            imageLoop();
        }
    }

    // SHOW FIRST IMAGE, & THEN SET & CALL SLIDE INTERVAL
    setTimeout(slideshow, 1000);
    var imageSlideshowInterval = setInterval(slideshow, 10000);
</script>
