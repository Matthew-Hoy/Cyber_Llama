#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="IFM_Project")]
public partial class CyberLlamaDatabaseDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertUserPosition(UserPosition instance);
  partial void UpdateUserPosition(UserPosition instance);
  partial void DeleteUserPosition(UserPosition instance);
  partial void InsertAdmin(Admin instance);
  partial void UpdateAdmin(Admin instance);
  partial void DeleteAdmin(Admin instance);
  partial void InsertAirCooler(AirCooler instance);
  partial void UpdateAirCooler(AirCooler instance);
  partial void DeleteAirCooler(AirCooler instance);
  partial void InsertCaseToMobo(CaseToMobo instance);
  partial void UpdateCaseToMobo(CaseToMobo instance);
  partial void DeleteCaseToMobo(CaseToMobo instance);
  partial void InsertClient(Client instance);
  partial void UpdateClient(Client instance);
  partial void DeleteClient(Client instance);
  partial void InsertCPU(CPU instance);
  partial void UpdateCPU(CPU instance);
  partial void DeleteCPU(CPU instance);
  partial void InsertCpuToAirCooler(CpuToAirCooler instance);
  partial void UpdateCpuToAirCooler(CpuToAirCooler instance);
  partial void DeleteCpuToAirCooler(CpuToAirCooler instance);
  partial void InsertCpuToLiquidCooler(CpuToLiquidCooler instance);
  partial void UpdateCpuToLiquidCooler(CpuToLiquidCooler instance);
  partial void DeleteCpuToLiquidCooler(CpuToLiquidCooler instance);
  partial void InsertFan(Fan instance);
  partial void UpdateFan(Fan instance);
  partial void DeleteFan(Fan instance);
  partial void InsertGPU(GPU instance);
  partial void UpdateGPU(GPU instance);
  partial void DeleteGPU(GPU instance);
  partial void InsertGpuToMonitor(GpuToMonitor instance);
  partial void UpdateGpuToMonitor(GpuToMonitor instance);
  partial void DeleteGpuToMonitor(GpuToMonitor instance);
  partial void InsertHDD(HDD instance);
  partial void UpdateHDD(HDD instance);
  partial void DeleteHDD(HDD instance);
  partial void InsertHeadset(Headset instance);
  partial void UpdateHeadset(Headset instance);
  partial void DeleteHeadset(Headset instance);
  partial void InsertKeyboard(Keyboard instance);
  partial void UpdateKeyboard(Keyboard instance);
  partial void DeleteKeyboard(Keyboard instance);
  partial void InsertLiquidCooler(LiquidCooler instance);
  partial void UpdateLiquidCooler(LiquidCooler instance);
  partial void DeleteLiquidCooler(LiquidCooler instance);
  partial void InsertLoginTable(LoginTable instance);
  partial void UpdateLoginTable(LoginTable instance);
  partial void DeleteLoginTable(LoginTable instance);
  partial void InsertMicrophone(Microphone instance);
  partial void UpdateMicrophone(Microphone instance);
  partial void DeleteMicrophone(Microphone instance);
  partial void InsertMoboToCPU(MoboToCPU instance);
  partial void UpdateMoboToCPU(MoboToCPU instance);
  partial void DeleteMoboToCPU(MoboToCPU instance);
  partial void InsertMoboToRAM(MoboToRAM instance);
  partial void UpdateMoboToRAM(MoboToRAM instance);
  partial void DeleteMoboToRAM(MoboToRAM instance);
  partial void InsertMonitor(Monitor instance);
  partial void UpdateMonitor(Monitor instance);
  partial void DeleteMonitor(Monitor instance);
  partial void InsertMotherboard(Motherboard instance);
  partial void UpdateMotherboard(Motherboard instance);
  partial void DeleteMotherboard(Motherboard instance);
  partial void InsertMouse(Mouse instance);
  partial void UpdateMouse(Mouse instance);
  partial void DeleteMouse(Mouse instance);
  partial void InsertMousePad(MousePad instance);
  partial void UpdateMousePad(MousePad instance);
  partial void DeleteMousePad(MousePad instance);
  partial void InsertO(O instance);
  partial void UpdateO(O instance);
  partial void DeleteO(O instance);
  partial void InsertPCCase(PCCase instance);
  partial void UpdatePCCase(PCCase instance);
  partial void DeletePCCase(PCCase instance);
  partial void InsertPSU(PSU instance);
  partial void UpdatePSU(PSU instance);
  partial void DeletePSU(PSU instance);
  partial void InsertPSUtoCase(PSUtoCase instance);
  partial void UpdatePSUtoCase(PSUtoCase instance);
  partial void DeletePSUtoCase(PSUtoCase instance);
  partial void InsertRAM(RAM instance);
  partial void UpdateRAM(RAM instance);
  partial void DeleteRAM(RAM instance);
  partial void InsertSpeaker(Speaker instance);
  partial void UpdateSpeaker(Speaker instance);
  partial void DeleteSpeaker(Speaker instance);
  partial void InsertSSD(SSD instance);
  partial void UpdateSSD(SSD instance);
  partial void DeleteSSD(SSD instance);
  #endregion
	
	public CyberLlamaDatabaseDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["IFM_ProjectConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public CyberLlamaDatabaseDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CyberLlamaDatabaseDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CyberLlamaDatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CyberLlamaDatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<UserPosition> UserPositions
	{
		get
		{
			return this.GetTable<UserPosition>();
		}
	}
	
	public System.Data.Linq.Table<Admin> Admins
	{
		get
		{
			return this.GetTable<Admin>();
		}
	}
	
	public System.Data.Linq.Table<AirCooler> AirCoolers
	{
		get
		{
			return this.GetTable<AirCooler>();
		}
	}
	
	public System.Data.Linq.Table<CaseToMobo> CaseToMobos
	{
		get
		{
			return this.GetTable<CaseToMobo>();
		}
	}
	
	public System.Data.Linq.Table<Client> Clients
	{
		get
		{
			return this.GetTable<Client>();
		}
	}
	
	public System.Data.Linq.Table<CPU> CPUs
	{
		get
		{
			return this.GetTable<CPU>();
		}
	}
	
	public System.Data.Linq.Table<CpuToAirCooler> CpuToAirCoolers
	{
		get
		{
			return this.GetTable<CpuToAirCooler>();
		}
	}
	
	public System.Data.Linq.Table<CpuToLiquidCooler> CpuToLiquidCoolers
	{
		get
		{
			return this.GetTable<CpuToLiquidCooler>();
		}
	}
	
	public System.Data.Linq.Table<Fan> Fans
	{
		get
		{
			return this.GetTable<Fan>();
		}
	}
	
	public System.Data.Linq.Table<GPU> GPUs
	{
		get
		{
			return this.GetTable<GPU>();
		}
	}
	
	public System.Data.Linq.Table<GpuToMonitor> GpuToMonitors
	{
		get
		{
			return this.GetTable<GpuToMonitor>();
		}
	}
	
	public System.Data.Linq.Table<HDD> HDDs
	{
		get
		{
			return this.GetTable<HDD>();
		}
	}
	
	public System.Data.Linq.Table<Headset> Headsets
	{
		get
		{
			return this.GetTable<Headset>();
		}
	}
	
	public System.Data.Linq.Table<Keyboard> Keyboards
	{
		get
		{
			return this.GetTable<Keyboard>();
		}
	}
	
	public System.Data.Linq.Table<LiquidCooler> LiquidCoolers
	{
		get
		{
			return this.GetTable<LiquidCooler>();
		}
	}
	
	public System.Data.Linq.Table<LoginTable> LoginTables
	{
		get
		{
			return this.GetTable<LoginTable>();
		}
	}
	
	public System.Data.Linq.Table<Microphone> Microphones
	{
		get
		{
			return this.GetTable<Microphone>();
		}
	}
	
	public System.Data.Linq.Table<MoboToCPU> MoboToCPUs
	{
		get
		{
			return this.GetTable<MoboToCPU>();
		}
	}
	
	public System.Data.Linq.Table<MoboToRAM> MoboToRAMs
	{
		get
		{
			return this.GetTable<MoboToRAM>();
		}
	}
	
	public System.Data.Linq.Table<Monitor> Monitors
	{
		get
		{
			return this.GetTable<Monitor>();
		}
	}
	
	public System.Data.Linq.Table<Motherboard> Motherboards
	{
		get
		{
			return this.GetTable<Motherboard>();
		}
	}
	
	public System.Data.Linq.Table<Mouse> Mouses
	{
		get
		{
			return this.GetTable<Mouse>();
		}
	}
	
	public System.Data.Linq.Table<MousePad> MousePads
	{
		get
		{
			return this.GetTable<MousePad>();
		}
	}
	
	public System.Data.Linq.Table<O> Os
	{
		get
		{
			return this.GetTable<O>();
		}
	}
	
	public System.Data.Linq.Table<PCCase> PCCases
	{
		get
		{
			return this.GetTable<PCCase>();
		}
	}
	
	public System.Data.Linq.Table<PSU> PSUs
	{
		get
		{
			return this.GetTable<PSU>();
		}
	}
	
	public System.Data.Linq.Table<PSUtoCase> PSUtoCases
	{
		get
		{
			return this.GetTable<PSUtoCase>();
		}
	}
	
	public System.Data.Linq.Table<RAM> RAMs
	{
		get
		{
			return this.GetTable<RAM>();
		}
	}
	
	public System.Data.Linq.Table<Speaker> Speakers
	{
		get
		{
			return this.GetTable<Speaker>();
		}
	}
	
	public System.Data.Linq.Table<SSD> SSDs
	{
		get
		{
			return this.GetTable<SSD>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserPosition")]
public partial class UserPosition : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PositionID;
	
	private string _Position;
	
	private EntitySet<Admin> _Admins;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPositionIDChanging(int value);
    partial void OnPositionIDChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    #endregion
	
	public UserPosition()
	{
		this._Admins = new EntitySet<Admin>(new Action<Admin>(this.attach_Admins), new Action<Admin>(this.detach_Admins));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int PositionID
	{
		get
		{
			return this._PositionID;
		}
		set
		{
			if ((this._PositionID != value))
			{
				this.OnPositionIDChanging(value);
				this.SendPropertyChanging();
				this._PositionID = value;
				this.SendPropertyChanged("PositionID");
				this.OnPositionIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Position
	{
		get
		{
			return this._Position;
		}
		set
		{
			if ((this._Position != value))
			{
				this.OnPositionChanging(value);
				this.SendPropertyChanging();
				this._Position = value;
				this.SendPropertyChanged("Position");
				this.OnPositionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserPosition_Admin", Storage="_Admins", ThisKey="PositionID", OtherKey="Position")]
	public EntitySet<Admin> Admins
	{
		get
		{
			return this._Admins;
		}
		set
		{
			this._Admins.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Admins(Admin entity)
	{
		this.SendPropertyChanging();
		entity.UserPosition = this;
	}
	
	private void detach_Admins(Admin entity)
	{
		this.SendPropertyChanging();
		entity.UserPosition = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Admin_ID;
	
	private string _First_Name;
	
	private string _Surname;
	
	private string _Email;
	
	private string _Conrtact_Number;
	
	private int _Position;
	
	private EntityRef<UserPosition> _UserPosition;
	
	private EntityRef<LoginTable> _LoginTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdmin_IDChanging(int value);
    partial void OnAdmin_IDChanged();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnConrtact_NumberChanging(string value);
    partial void OnConrtact_NumberChanged();
    partial void OnPositionChanging(int value);
    partial void OnPositionChanged();
    #endregion
	
	public Admin()
	{
		this._UserPosition = default(EntityRef<UserPosition>);
		this._LoginTable = default(EntityRef<LoginTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Admin_ID
	{
		get
		{
			return this._Admin_ID;
		}
		set
		{
			if ((this._Admin_ID != value))
			{
				if (this._LoginTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAdmin_IDChanging(value);
				this.SendPropertyChanging();
				this._Admin_ID = value;
				this.SendPropertyChanged("Admin_ID");
				this.OnAdmin_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string First_Name
	{
		get
		{
			return this._First_Name;
		}
		set
		{
			if ((this._First_Name != value))
			{
				this.OnFirst_NameChanging(value);
				this.SendPropertyChanging();
				this._First_Name = value;
				this.SendPropertyChanged("First_Name");
				this.OnFirst_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Surname
	{
		get
		{
			return this._Surname;
		}
		set
		{
			if ((this._Surname != value))
			{
				this.OnSurnameChanging(value);
				this.SendPropertyChanging();
				this._Surname = value;
				this.SendPropertyChanged("Surname");
				this.OnSurnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Conrtact_Number", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
	public string Conrtact_Number
	{
		get
		{
			return this._Conrtact_Number;
		}
		set
		{
			if ((this._Conrtact_Number != value))
			{
				this.OnConrtact_NumberChanging(value);
				this.SendPropertyChanging();
				this._Conrtact_Number = value;
				this.SendPropertyChanged("Conrtact_Number");
				this.OnConrtact_NumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int NOT NULL")]
	public int Position
	{
		get
		{
			return this._Position;
		}
		set
		{
			if ((this._Position != value))
			{
				if (this._UserPosition.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPositionChanging(value);
				this.SendPropertyChanging();
				this._Position = value;
				this.SendPropertyChanged("Position");
				this.OnPositionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserPosition_Admin", Storage="_UserPosition", ThisKey="Position", OtherKey="PositionID", IsForeignKey=true)]
	public UserPosition UserPosition
	{
		get
		{
			return this._UserPosition.Entity;
		}
		set
		{
			UserPosition previousValue = this._UserPosition.Entity;
			if (((previousValue != value) 
						|| (this._UserPosition.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserPosition.Entity = null;
					previousValue.Admins.Remove(this);
				}
				this._UserPosition.Entity = value;
				if ((value != null))
				{
					value.Admins.Add(this);
					this._Position = value.PositionID;
				}
				else
				{
					this._Position = default(int);
				}
				this.SendPropertyChanged("UserPosition");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoginTable_Admin", Storage="_LoginTable", ThisKey="Admin_ID", OtherKey="User_ID", IsForeignKey=true)]
	public LoginTable LoginTable
	{
		get
		{
			return this._LoginTable.Entity;
		}
		set
		{
			LoginTable previousValue = this._LoginTable.Entity;
			if (((previousValue != value) 
						|| (this._LoginTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LoginTable.Entity = null;
					previousValue.Admin = null;
				}
				this._LoginTable.Entity = value;
				if ((value != null))
				{
					value.Admin = this;
					this._Admin_ID = value.User_ID;
				}
				else
				{
					this._Admin_ID = default(int);
				}
				this.SendPropertyChanged("LoginTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AirCooler")]
public partial class AirCooler : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Model;
	
	private string _Brand;
	
	private string _Series;
	
	private string _Fan_Size;
	
	private string _Compatibility;
	
	private string _Fan_RPM;
	
	private string _Air_Flow;
	
	private string _Noise_Level;
	
	private string _Power_Connector;
	
	private string _Colour;
	
	private string _Materials;
	
	private string _Fan_Dimensions;
	
	private string _Heatsink_Dimentions;
	
	private string _Weight;
	
	private string _Features;
	
	private string _Package_Contents;
	
	private string _Warranty;
	
	private EntitySet<CpuToAirCooler> _CpuToAirCoolers;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnSeriesChanging(string value);
    partial void OnSeriesChanged();
    partial void OnFan_SizeChanging(string value);
    partial void OnFan_SizeChanged();
    partial void OnCompatibilityChanging(string value);
    partial void OnCompatibilityChanged();
    partial void OnFan_RPMChanging(string value);
    partial void OnFan_RPMChanged();
    partial void OnAir_FlowChanging(string value);
    partial void OnAir_FlowChanged();
    partial void OnNoise_LevelChanging(string value);
    partial void OnNoise_LevelChanged();
    partial void OnPower_ConnectorChanging(string value);
    partial void OnPower_ConnectorChanged();
    partial void OnColourChanging(string value);
    partial void OnColourChanged();
    partial void OnMaterialsChanging(string value);
    partial void OnMaterialsChanged();
    partial void OnFan_DimensionsChanging(string value);
    partial void OnFan_DimensionsChanged();
    partial void OnHeatsink_DimentionsChanging(string value);
    partial void OnHeatsink_DimentionsChanged();
    partial void OnWeightChanging(string value);
    partial void OnWeightChanged();
    partial void OnFeaturesChanging(string value);
    partial void OnFeaturesChanged();
    partial void OnPackage_ContentsChanging(string value);
    partial void OnPackage_ContentsChanged();
    partial void OnWarrantyChanging(string value);
    partial void OnWarrantyChanged();
    #endregion
	
	public AirCooler()
	{
		this._CpuToAirCoolers = new EntitySet<CpuToAirCooler>(new Action<CpuToAirCooler>(this.attach_CpuToAirCoolers), new Action<CpuToAirCooler>(this.detach_CpuToAirCoolers));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this.OnBrandChanging(value);
				this.SendPropertyChanging();
				this._Brand = value;
				this.SendPropertyChanged("Brand");
				this.OnBrandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Series", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Series
	{
		get
		{
			return this._Series;
		}
		set
		{
			if ((this._Series != value))
			{
				this.OnSeriesChanging(value);
				this.SendPropertyChanging();
				this._Series = value;
				this.SendPropertyChanged("Series");
				this.OnSeriesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fan_Size", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Fan_Size
	{
		get
		{
			return this._Fan_Size;
		}
		set
		{
			if ((this._Fan_Size != value))
			{
				this.OnFan_SizeChanging(value);
				this.SendPropertyChanging();
				this._Fan_Size = value;
				this.SendPropertyChanged("Fan_Size");
				this.OnFan_SizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Compatibility", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Compatibility
	{
		get
		{
			return this._Compatibility;
		}
		set
		{
			if ((this._Compatibility != value))
			{
				this.OnCompatibilityChanging(value);
				this.SendPropertyChanging();
				this._Compatibility = value;
				this.SendPropertyChanged("Compatibility");
				this.OnCompatibilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fan_RPM", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Fan_RPM
	{
		get
		{
			return this._Fan_RPM;
		}
		set
		{
			if ((this._Fan_RPM != value))
			{
				this.OnFan_RPMChanging(value);
				this.SendPropertyChanging();
				this._Fan_RPM = value;
				this.SendPropertyChanged("Fan_RPM");
				this.OnFan_RPMChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Air_Flow", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Air_Flow
	{
		get
		{
			return this._Air_Flow;
		}
		set
		{
			if ((this._Air_Flow != value))
			{
				this.OnAir_FlowChanging(value);
				this.SendPropertyChanging();
				this._Air_Flow = value;
				this.SendPropertyChanged("Air_Flow");
				this.OnAir_FlowChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Noise_Level", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Noise_Level
	{
		get
		{
			return this._Noise_Level;
		}
		set
		{
			if ((this._Noise_Level != value))
			{
				this.OnNoise_LevelChanging(value);
				this.SendPropertyChanging();
				this._Noise_Level = value;
				this.SendPropertyChanged("Noise_Level");
				this.OnNoise_LevelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power_Connector", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Power_Connector
	{
		get
		{
			return this._Power_Connector;
		}
		set
		{
			if ((this._Power_Connector != value))
			{
				this.OnPower_ConnectorChanging(value);
				this.SendPropertyChanging();
				this._Power_Connector = value;
				this.SendPropertyChanged("Power_Connector");
				this.OnPower_ConnectorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Colour", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Colour
	{
		get
		{
			return this._Colour;
		}
		set
		{
			if ((this._Colour != value))
			{
				this.OnColourChanging(value);
				this.SendPropertyChanging();
				this._Colour = value;
				this.SendPropertyChanged("Colour");
				this.OnColourChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Materials", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Materials
	{
		get
		{
			return this._Materials;
		}
		set
		{
			if ((this._Materials != value))
			{
				this.OnMaterialsChanging(value);
				this.SendPropertyChanging();
				this._Materials = value;
				this.SendPropertyChanged("Materials");
				this.OnMaterialsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fan_Dimensions", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Fan_Dimensions
	{
		get
		{
			return this._Fan_Dimensions;
		}
		set
		{
			if ((this._Fan_Dimensions != value))
			{
				this.OnFan_DimensionsChanging(value);
				this.SendPropertyChanging();
				this._Fan_Dimensions = value;
				this.SendPropertyChanged("Fan_Dimensions");
				this.OnFan_DimensionsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heatsink_Dimentions", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Heatsink_Dimentions
	{
		get
		{
			return this._Heatsink_Dimentions;
		}
		set
		{
			if ((this._Heatsink_Dimentions != value))
			{
				this.OnHeatsink_DimentionsChanging(value);
				this.SendPropertyChanging();
				this._Heatsink_Dimentions = value;
				this.SendPropertyChanged("Heatsink_Dimentions");
				this.OnHeatsink_DimentionsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this.OnWeightChanging(value);
				this.SendPropertyChanging();
				this._Weight = value;
				this.SendPropertyChanged("Weight");
				this.OnWeightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Features", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Features
	{
		get
		{
			return this._Features;
		}
		set
		{
			if ((this._Features != value))
			{
				this.OnFeaturesChanging(value);
				this.SendPropertyChanging();
				this._Features = value;
				this.SendPropertyChanged("Features");
				this.OnFeaturesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Package_Contents", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Package_Contents
	{
		get
		{
			return this._Package_Contents;
		}
		set
		{
			if ((this._Package_Contents != value))
			{
				this.OnPackage_ContentsChanging(value);
				this.SendPropertyChanging();
				this._Package_Contents = value;
				this.SendPropertyChanged("Package_Contents");
				this.OnPackage_ContentsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warranty", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Warranty
	{
		get
		{
			return this._Warranty;
		}
		set
		{
			if ((this._Warranty != value))
			{
				this.OnWarrantyChanging(value);
				this.SendPropertyChanging();
				this._Warranty = value;
				this.SendPropertyChanged("Warranty");
				this.OnWarrantyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AirCooler_CpuToAirCooler", Storage="_CpuToAirCoolers", ThisKey="Model", OtherKey="Cooler_Model")]
	public EntitySet<CpuToAirCooler> CpuToAirCoolers
	{
		get
		{
			return this._CpuToAirCoolers;
		}
		set
		{
			this._CpuToAirCoolers.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CpuToAirCoolers(CpuToAirCooler entity)
	{
		this.SendPropertyChanging();
		entity.AirCooler = this;
	}
	
	private void detach_CpuToAirCoolers(CpuToAirCooler entity)
	{
		this.SendPropertyChanging();
		entity.AirCooler = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CaseToMobo")]
public partial class CaseToMobo : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Case_Model;
	
	private string _Mobo_Model;
	
	private EntityRef<Motherboard> _Motherboard;
	
	private EntityRef<PCCase> _PCCase;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCase_ModelChanging(string value);
    partial void OnCase_ModelChanged();
    partial void OnMobo_ModelChanging(string value);
    partial void OnMobo_ModelChanged();
    #endregion
	
	public CaseToMobo()
	{
		this._Motherboard = default(EntityRef<Motherboard>);
		this._PCCase = default(EntityRef<PCCase>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Case_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Case_Model
	{
		get
		{
			return this._Case_Model;
		}
		set
		{
			if ((this._Case_Model != value))
			{
				if (this._PCCase.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCase_ModelChanging(value);
				this.SendPropertyChanging();
				this._Case_Model = value;
				this.SendPropertyChanged("Case_Model");
				this.OnCase_ModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobo_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Mobo_Model
	{
		get
		{
			return this._Mobo_Model;
		}
		set
		{
			if ((this._Mobo_Model != value))
			{
				if (this._Motherboard.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMobo_ModelChanging(value);
				this.SendPropertyChanging();
				this._Mobo_Model = value;
				this.SendPropertyChanged("Mobo_Model");
				this.OnMobo_ModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Motherboard_CaseToMobo", Storage="_Motherboard", ThisKey="Mobo_Model", OtherKey="Model", IsForeignKey=true)]
	public Motherboard Motherboard
	{
		get
		{
			return this._Motherboard.Entity;
		}
		set
		{
			Motherboard previousValue = this._Motherboard.Entity;
			if (((previousValue != value) 
						|| (this._Motherboard.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Motherboard.Entity = null;
					previousValue.CaseToMobos.Remove(this);
				}
				this._Motherboard.Entity = value;
				if ((value != null))
				{
					value.CaseToMobos.Add(this);
					this._Mobo_Model = value.Model;
				}
				else
				{
					this._Mobo_Model = default(string);
				}
				this.SendPropertyChanged("Motherboard");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCCase_CaseToMobo", Storage="_PCCase", ThisKey="Case_Model", OtherKey="Model", IsForeignKey=true)]
	public PCCase PCCase
	{
		get
		{
			return this._PCCase.Entity;
		}
		set
		{
			PCCase previousValue = this._PCCase.Entity;
			if (((previousValue != value) 
						|| (this._PCCase.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._PCCase.Entity = null;
					previousValue.CaseToMobos.Remove(this);
				}
				this._PCCase.Entity = value;
				if ((value != null))
				{
					value.CaseToMobos.Add(this);
					this._Case_Model = value.Model;
				}
				else
				{
					this._Case_Model = default(string);
				}
				this.SendPropertyChanged("PCCase");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Client")]
public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _User_ID;
	
	private string _First_Name;
	
	private string _Surname;
	
	private string _Email;
	
	private string _Address;
	
	private string _City;
	
	private string _Province;
	
	private string _ZIP_Code;
	
	private EntityRef<LoginTable> _LoginTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnProvinceChanging(string value);
    partial void OnProvinceChanged();
    partial void OnZIP_CodeChanging(string value);
    partial void OnZIP_CodeChanged();
    #endregion
	
	public Client()
	{
		this._LoginTable = default(EntityRef<LoginTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int User_ID
	{
		get
		{
			return this._User_ID;
		}
		set
		{
			if ((this._User_ID != value))
			{
				if (this._LoginTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUser_IDChanging(value);
				this.SendPropertyChanging();
				this._User_ID = value;
				this.SendPropertyChanged("User_ID");
				this.OnUser_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string First_Name
	{
		get
		{
			return this._First_Name;
		}
		set
		{
			if ((this._First_Name != value))
			{
				this.OnFirst_NameChanging(value);
				this.SendPropertyChanging();
				this._First_Name = value;
				this.SendPropertyChanged("First_Name");
				this.OnFirst_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Surname
	{
		get
		{
			return this._Surname;
		}
		set
		{
			if ((this._Surname != value))
			{
				this.OnSurnameChanging(value);
				this.SendPropertyChanging();
				this._Surname = value;
				this.SendPropertyChanged("Surname");
				this.OnSurnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string City
	{
		get
		{
			return this._City;
		}
		set
		{
			if ((this._City != value))
			{
				this.OnCityChanging(value);
				this.SendPropertyChanging();
				this._City = value;
				this.SendPropertyChanged("City");
				this.OnCityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Province
	{
		get
		{
			return this._Province;
		}
		set
		{
			if ((this._Province != value))
			{
				this.OnProvinceChanging(value);
				this.SendPropertyChanging();
				this._Province = value;
				this.SendPropertyChanged("Province");
				this.OnProvinceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZIP_Code", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string ZIP_Code
	{
		get
		{
			return this._ZIP_Code;
		}
		set
		{
			if ((this._ZIP_Code != value))
			{
				this.OnZIP_CodeChanging(value);
				this.SendPropertyChanging();
				this._ZIP_Code = value;
				this.SendPropertyChanged("ZIP_Code");
				this.OnZIP_CodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoginTable_Client", Storage="_LoginTable", ThisKey="User_ID", OtherKey="User_ID", IsForeignKey=true)]
	public LoginTable LoginTable
	{
		get
		{
			return this._LoginTable.Entity;
		}
		set
		{
			LoginTable previousValue = this._LoginTable.Entity;
			if (((previousValue != value) 
						|| (this._LoginTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LoginTable.Entity = null;
					previousValue.Client = null;
				}
				this._LoginTable.Entity = value;
				if ((value != null))
				{
					value.Client = this;
					this._User_ID = value.User_ID;
				}
				else
				{
					this._User_ID = default(int);
				}
				this.SendPropertyChanged("LoginTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CPU")]
public partial class CPU : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Model;
	
	private string _Brand;
	
	private string _Architecture;
	
	private string _Cores;
	
	private string _Threads;
	
	private string _Base_Clock;
	
	private string _Boost_Clock;
	
	private string _Total_L1_Cache;
	
	private string _Total_L2_Cache;
	
	private string _Total_L3_Cache;
	
	private string _CMOS;
	
	private string _Pakage;
	
	private string _TDP;
	
	private string _Max_Temp;
	
	private string _System_Memory_Speed;
	
	private string _System_Memory_Type;
	
	private string _Memory_Channels;
	
	private string _Supported_Tech;
	
	private string _Warranty;
	
	private EntitySet<CpuToAirCooler> _CpuToAirCoolers;
	
	private EntitySet<CpuToLiquidCooler> _CpuToLiquidCoolers;
	
	private EntitySet<MoboToCPU> _MoboToCPUs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnArchitectureChanging(string value);
    partial void OnArchitectureChanged();
    partial void OnCoresChanging(string value);
    partial void OnCoresChanged();
    partial void OnThreadsChanging(string value);
    partial void OnThreadsChanged();
    partial void OnBase_ClockChanging(string value);
    partial void OnBase_ClockChanged();
    partial void OnBoost_ClockChanging(string value);
    partial void OnBoost_ClockChanged();
    partial void OnTotal_L1_CacheChanging(string value);
    partial void OnTotal_L1_CacheChanged();
    partial void OnTotal_L2_CacheChanging(string value);
    partial void OnTotal_L2_CacheChanged();
    partial void OnTotal_L3_CacheChanging(string value);
    partial void OnTotal_L3_CacheChanged();
    partial void OnCMOSChanging(string value);
    partial void OnCMOSChanged();
    partial void OnPakageChanging(string value);
    partial void OnPakageChanged();
    partial void OnTDPChanging(string value);
    partial void OnTDPChanged();
    partial void OnMax_TempChanging(string value);
    partial void OnMax_TempChanged();
    partial void OnSystem_Memory_SpeedChanging(string value);
    partial void OnSystem_Memory_SpeedChanged();
    partial void OnSystem_Memory_TypeChanging(string value);
    partial void OnSystem_Memory_TypeChanged();
    partial void OnMemory_ChannelsChanging(string value);
    partial void OnMemory_ChannelsChanged();
    partial void OnSupported_TechChanging(string value);
    partial void OnSupported_TechChanged();
    partial void OnWarrantyChanging(string value);
    partial void OnWarrantyChanged();
    #endregion
	
	public CPU()
	{
		this._CpuToAirCoolers = new EntitySet<CpuToAirCooler>(new Action<CpuToAirCooler>(this.attach_CpuToAirCoolers), new Action<CpuToAirCooler>(this.detach_CpuToAirCoolers));
		this._CpuToLiquidCoolers = new EntitySet<CpuToLiquidCooler>(new Action<CpuToLiquidCooler>(this.attach_CpuToLiquidCoolers), new Action<CpuToLiquidCooler>(this.detach_CpuToLiquidCoolers));
		this._MoboToCPUs = new EntitySet<MoboToCPU>(new Action<MoboToCPU>(this.attach_MoboToCPUs), new Action<MoboToCPU>(this.detach_MoboToCPUs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this.OnBrandChanging(value);
				this.SendPropertyChanging();
				this._Brand = value;
				this.SendPropertyChanged("Brand");
				this.OnBrandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Architecture", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Architecture
	{
		get
		{
			return this._Architecture;
		}
		set
		{
			if ((this._Architecture != value))
			{
				this.OnArchitectureChanging(value);
				this.SendPropertyChanging();
				this._Architecture = value;
				this.SendPropertyChanged("Architecture");
				this.OnArchitectureChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cores", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Cores
	{
		get
		{
			return this._Cores;
		}
		set
		{
			if ((this._Cores != value))
			{
				this.OnCoresChanging(value);
				this.SendPropertyChanging();
				this._Cores = value;
				this.SendPropertyChanged("Cores");
				this.OnCoresChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Threads", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Threads
	{
		get
		{
			return this._Threads;
		}
		set
		{
			if ((this._Threads != value))
			{
				this.OnThreadsChanging(value);
				this.SendPropertyChanging();
				this._Threads = value;
				this.SendPropertyChanged("Threads");
				this.OnThreadsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Base_Clock", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Base_Clock
	{
		get
		{
			return this._Base_Clock;
		}
		set
		{
			if ((this._Base_Clock != value))
			{
				this.OnBase_ClockChanging(value);
				this.SendPropertyChanging();
				this._Base_Clock = value;
				this.SendPropertyChanged("Base_Clock");
				this.OnBase_ClockChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Boost_Clock", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Boost_Clock
	{
		get
		{
			return this._Boost_Clock;
		}
		set
		{
			if ((this._Boost_Clock != value))
			{
				this.OnBoost_ClockChanging(value);
				this.SendPropertyChanging();
				this._Boost_Clock = value;
				this.SendPropertyChanged("Boost_Clock");
				this.OnBoost_ClockChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_L1_Cache", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Total_L1_Cache
	{
		get
		{
			return this._Total_L1_Cache;
		}
		set
		{
			if ((this._Total_L1_Cache != value))
			{
				this.OnTotal_L1_CacheChanging(value);
				this.SendPropertyChanging();
				this._Total_L1_Cache = value;
				this.SendPropertyChanged("Total_L1_Cache");
				this.OnTotal_L1_CacheChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_L2_Cache", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Total_L2_Cache
	{
		get
		{
			return this._Total_L2_Cache;
		}
		set
		{
			if ((this._Total_L2_Cache != value))
			{
				this.OnTotal_L2_CacheChanging(value);
				this.SendPropertyChanging();
				this._Total_L2_Cache = value;
				this.SendPropertyChanged("Total_L2_Cache");
				this.OnTotal_L2_CacheChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_L3_Cache", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Total_L3_Cache
	{
		get
		{
			return this._Total_L3_Cache;
		}
		set
		{
			if ((this._Total_L3_Cache != value))
			{
				this.OnTotal_L3_CacheChanging(value);
				this.SendPropertyChanging();
				this._Total_L3_Cache = value;
				this.SendPropertyChanged("Total_L3_Cache");
				this.OnTotal_L3_CacheChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMOS", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string CMOS
	{
		get
		{
			return this._CMOS;
		}
		set
		{
			if ((this._CMOS != value))
			{
				this.OnCMOSChanging(value);
				this.SendPropertyChanging();
				this._CMOS = value;
				this.SendPropertyChanged("CMOS");
				this.OnCMOSChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pakage", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Pakage
	{
		get
		{
			return this._Pakage;
		}
		set
		{
			if ((this._Pakage != value))
			{
				this.OnPakageChanging(value);
				this.SendPropertyChanging();
				this._Pakage = value;
				this.SendPropertyChanged("Pakage");
				this.OnPakageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDP", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string TDP
	{
		get
		{
			return this._TDP;
		}
		set
		{
			if ((this._TDP != value))
			{
				this.OnTDPChanging(value);
				this.SendPropertyChanging();
				this._TDP = value;
				this.SendPropertyChanged("TDP");
				this.OnTDPChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Max_Temp", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Max_Temp
	{
		get
		{
			return this._Max_Temp;
		}
		set
		{
			if ((this._Max_Temp != value))
			{
				this.OnMax_TempChanging(value);
				this.SendPropertyChanging();
				this._Max_Temp = value;
				this.SendPropertyChanged("Max_Temp");
				this.OnMax_TempChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_System_Memory_Speed", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string System_Memory_Speed
	{
		get
		{
			return this._System_Memory_Speed;
		}
		set
		{
			if ((this._System_Memory_Speed != value))
			{
				this.OnSystem_Memory_SpeedChanging(value);
				this.SendPropertyChanging();
				this._System_Memory_Speed = value;
				this.SendPropertyChanged("System_Memory_Speed");
				this.OnSystem_Memory_SpeedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_System_Memory_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string System_Memory_Type
	{
		get
		{
			return this._System_Memory_Type;
		}
		set
		{
			if ((this._System_Memory_Type != value))
			{
				this.OnSystem_Memory_TypeChanging(value);
				this.SendPropertyChanging();
				this._System_Memory_Type = value;
				this.SendPropertyChanged("System_Memory_Type");
				this.OnSystem_Memory_TypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memory_Channels", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Memory_Channels
	{
		get
		{
			return this._Memory_Channels;
		}
		set
		{
			if ((this._Memory_Channels != value))
			{
				this.OnMemory_ChannelsChanging(value);
				this.SendPropertyChanging();
				this._Memory_Channels = value;
				this.SendPropertyChanged("Memory_Channels");
				this.OnMemory_ChannelsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supported_Tech", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Supported_Tech
	{
		get
		{
			return this._Supported_Tech;
		}
		set
		{
			if ((this._Supported_Tech != value))
			{
				this.OnSupported_TechChanging(value);
				this.SendPropertyChanging();
				this._Supported_Tech = value;
				this.SendPropertyChanged("Supported_Tech");
				this.OnSupported_TechChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warranty", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Warranty
	{
		get
		{
			return this._Warranty;
		}
		set
		{
			if ((this._Warranty != value))
			{
				this.OnWarrantyChanging(value);
				this.SendPropertyChanging();
				this._Warranty = value;
				this.SendPropertyChanged("Warranty");
				this.OnWarrantyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CPU_CpuToAirCooler", Storage="_CpuToAirCoolers", ThisKey="Model", OtherKey="CPU_Model")]
	public EntitySet<CpuToAirCooler> CpuToAirCoolers
	{
		get
		{
			return this._CpuToAirCoolers;
		}
		set
		{
			this._CpuToAirCoolers.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CPU_CpuToLiquidCooler", Storage="_CpuToLiquidCoolers", ThisKey="Model", OtherKey="CPU_Model")]
	public EntitySet<CpuToLiquidCooler> CpuToLiquidCoolers
	{
		get
		{
			return this._CpuToLiquidCoolers;
		}
		set
		{
			this._CpuToLiquidCoolers.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CPU_MoboToCPU", Storage="_MoboToCPUs", ThisKey="Model", OtherKey="CPU_Model")]
	public EntitySet<MoboToCPU> MoboToCPUs
	{
		get
		{
			return this._MoboToCPUs;
		}
		set
		{
			this._MoboToCPUs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CpuToAirCoolers(CpuToAirCooler entity)
	{
		this.SendPropertyChanging();
		entity.CPU = this;
	}
	
	private void detach_CpuToAirCoolers(CpuToAirCooler entity)
	{
		this.SendPropertyChanging();
		entity.CPU = null;
	}
	
	private void attach_CpuToLiquidCoolers(CpuToLiquidCooler entity)
	{
		this.SendPropertyChanging();
		entity.CPU = this;
	}
	
	private void detach_CpuToLiquidCoolers(CpuToLiquidCooler entity)
	{
		this.SendPropertyChanging();
		entity.CPU = null;
	}
	
	private void attach_MoboToCPUs(MoboToCPU entity)
	{
		this.SendPropertyChanging();
		entity.CPU = this;
	}
	
	private void detach_MoboToCPUs(MoboToCPU entity)
	{
		this.SendPropertyChanging();
		entity.CPU = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CpuToAirCooler")]
public partial class CpuToAirCooler : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _CPU_Model;
	
	private string _Cooler_Model;
	
	private EntityRef<AirCooler> _AirCooler;
	
	private EntityRef<CPU> _CPU;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCPU_ModelChanging(string value);
    partial void OnCPU_ModelChanged();
    partial void OnCooler_ModelChanging(string value);
    partial void OnCooler_ModelChanged();
    #endregion
	
	public CpuToAirCooler()
	{
		this._AirCooler = default(EntityRef<AirCooler>);
		this._CPU = default(EntityRef<CPU>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPU_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string CPU_Model
	{
		get
		{
			return this._CPU_Model;
		}
		set
		{
			if ((this._CPU_Model != value))
			{
				if (this._CPU.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCPU_ModelChanging(value);
				this.SendPropertyChanging();
				this._CPU_Model = value;
				this.SendPropertyChanged("CPU_Model");
				this.OnCPU_ModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cooler_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Cooler_Model
	{
		get
		{
			return this._Cooler_Model;
		}
		set
		{
			if ((this._Cooler_Model != value))
			{
				if (this._AirCooler.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCooler_ModelChanging(value);
				this.SendPropertyChanging();
				this._Cooler_Model = value;
				this.SendPropertyChanged("Cooler_Model");
				this.OnCooler_ModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AirCooler_CpuToAirCooler", Storage="_AirCooler", ThisKey="Cooler_Model", OtherKey="Model", IsForeignKey=true)]
	public AirCooler AirCooler
	{
		get
		{
			return this._AirCooler.Entity;
		}
		set
		{
			AirCooler previousValue = this._AirCooler.Entity;
			if (((previousValue != value) 
						|| (this._AirCooler.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._AirCooler.Entity = null;
					previousValue.CpuToAirCoolers.Remove(this);
				}
				this._AirCooler.Entity = value;
				if ((value != null))
				{
					value.CpuToAirCoolers.Add(this);
					this._Cooler_Model = value.Model;
				}
				else
				{
					this._Cooler_Model = default(string);
				}
				this.SendPropertyChanged("AirCooler");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CPU_CpuToAirCooler", Storage="_CPU", ThisKey="CPU_Model", OtherKey="Model", IsForeignKey=true)]
	public CPU CPU
	{
		get
		{
			return this._CPU.Entity;
		}
		set
		{
			CPU previousValue = this._CPU.Entity;
			if (((previousValue != value) 
						|| (this._CPU.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CPU.Entity = null;
					previousValue.CpuToAirCoolers.Remove(this);
				}
				this._CPU.Entity = value;
				if ((value != null))
				{
					value.CpuToAirCoolers.Add(this);
					this._CPU_Model = value.Model;
				}
				else
				{
					this._CPU_Model = default(string);
				}
				this.SendPropertyChanged("CPU");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CpuToLiquidCooler")]
public partial class CpuToLiquidCooler : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _CPU_Model;
	
	private string _Liquid_Cooler_Model;
	
	private EntityRef<CPU> _CPU;
	
	private EntityRef<LiquidCooler> _LiquidCooler;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCPU_ModelChanging(string value);
    partial void OnCPU_ModelChanged();
    partial void OnLiquid_Cooler_ModelChanging(string value);
    partial void OnLiquid_Cooler_ModelChanged();
    #endregion
	
	public CpuToLiquidCooler()
	{
		this._CPU = default(EntityRef<CPU>);
		this._LiquidCooler = default(EntityRef<LiquidCooler>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPU_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string CPU_Model
	{
		get
		{
			return this._CPU_Model;
		}
		set
		{
			if ((this._CPU_Model != value))
			{
				if (this._CPU.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCPU_ModelChanging(value);
				this.SendPropertyChanging();
				this._CPU_Model = value;
				this.SendPropertyChanged("CPU_Model");
				this.OnCPU_ModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Liquid_Cooler_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Liquid_Cooler_Model
	{
		get
		{
			return this._Liquid_Cooler_Model;
		}
		set
		{
			if ((this._Liquid_Cooler_Model != value))
			{
				if (this._LiquidCooler.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLiquid_Cooler_ModelChanging(value);
				this.SendPropertyChanging();
				this._Liquid_Cooler_Model = value;
				this.SendPropertyChanged("Liquid_Cooler_Model");
				this.OnLiquid_Cooler_ModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CPU_CpuToLiquidCooler", Storage="_CPU", ThisKey="CPU_Model", OtherKey="Model", IsForeignKey=true)]
	public CPU CPU
	{
		get
		{
			return this._CPU.Entity;
		}
		set
		{
			CPU previousValue = this._CPU.Entity;
			if (((previousValue != value) 
						|| (this._CPU.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CPU.Entity = null;
					previousValue.CpuToLiquidCoolers.Remove(this);
				}
				this._CPU.Entity = value;
				if ((value != null))
				{
					value.CpuToLiquidCoolers.Add(this);
					this._CPU_Model = value.Model;
				}
				else
				{
					this._CPU_Model = default(string);
				}
				this.SendPropertyChanged("CPU");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LiquidCooler_CpuToLiquidCooler", Storage="_LiquidCooler", ThisKey="Liquid_Cooler_Model", OtherKey="Model", IsForeignKey=true)]
	public LiquidCooler LiquidCooler
	{
		get
		{
			return this._LiquidCooler.Entity;
		}
		set
		{
			LiquidCooler previousValue = this._LiquidCooler.Entity;
			if (((previousValue != value) 
						|| (this._LiquidCooler.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LiquidCooler.Entity = null;
					previousValue.CpuToLiquidCoolers.Remove(this);
				}
				this._LiquidCooler.Entity = value;
				if ((value != null))
				{
					value.CpuToLiquidCoolers.Add(this);
					this._Liquid_Cooler_Model = value.Model;
				}
				else
				{
					this._Liquid_Cooler_Model = default(string);
				}
				this.SendPropertyChanged("LiquidCooler");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fans")]
public partial class Fan : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Model;
	
	private string _Brand;
	
	private string _Series;
	
	private string _Dimensions;
	
	private string _RPM;
	
	private string _Max_Air_Flow;
	
	private string _Noise;
	
	private string _Static_Pressure;
	
	private string _Input_Voltage;
	
	private string _MBTF;
	
	private string _Cable_Length;
	
	private string _Package_Contents;
	
	private string _Warranty;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnSeriesChanging(string value);
    partial void OnSeriesChanged();
    partial void OnDimensionsChanging(string value);
    partial void OnDimensionsChanged();
    partial void OnRPMChanging(string value);
    partial void OnRPMChanged();
    partial void OnMax_Air_FlowChanging(string value);
    partial void OnMax_Air_FlowChanged();
    partial void OnNoiseChanging(string value);
    partial void OnNoiseChanged();
    partial void OnStatic_PressureChanging(string value);
    partial void OnStatic_PressureChanged();
    partial void OnInput_VoltageChanging(string value);
    partial void OnInput_VoltageChanged();
    partial void OnMBTFChanging(string value);
    partial void OnMBTFChanged();
    partial void OnCable_LengthChanging(string value);
    partial void OnCable_LengthChanged();
    partial void OnPackage_ContentsChanging(string value);
    partial void OnPackage_ContentsChanged();
    partial void OnWarrantyChanging(string value);
    partial void OnWarrantyChanged();
    #endregion
	
	public Fan()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this.OnBrandChanging(value);
				this.SendPropertyChanging();
				this._Brand = value;
				this.SendPropertyChanged("Brand");
				this.OnBrandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Series", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Series
	{
		get
		{
			return this._Series;
		}
		set
		{
			if ((this._Series != value))
			{
				this.OnSeriesChanging(value);
				this.SendPropertyChanging();
				this._Series = value;
				this.SendPropertyChanged("Series");
				this.OnSeriesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dimensions", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Dimensions
	{
		get
		{
			return this._Dimensions;
		}
		set
		{
			if ((this._Dimensions != value))
			{
				this.OnDimensionsChanging(value);
				this.SendPropertyChanging();
				this._Dimensions = value;
				this.SendPropertyChanged("Dimensions");
				this.OnDimensionsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RPM", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string RPM
	{
		get
		{
			return this._RPM;
		}
		set
		{
			if ((this._RPM != value))
			{
				this.OnRPMChanging(value);
				this.SendPropertyChanging();
				this._RPM = value;
				this.SendPropertyChanged("RPM");
				this.OnRPMChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Max_Air_Flow", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Max_Air_Flow
	{
		get
		{
			return this._Max_Air_Flow;
		}
		set
		{
			if ((this._Max_Air_Flow != value))
			{
				this.OnMax_Air_FlowChanging(value);
				this.SendPropertyChanging();
				this._Max_Air_Flow = value;
				this.SendPropertyChanged("Max_Air_Flow");
				this.OnMax_Air_FlowChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Noise", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Noise
	{
		get
		{
			return this._Noise;
		}
		set
		{
			if ((this._Noise != value))
			{
				this.OnNoiseChanging(value);
				this.SendPropertyChanging();
				this._Noise = value;
				this.SendPropertyChanged("Noise");
				this.OnNoiseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Static_Pressure", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Static_Pressure
	{
		get
		{
			return this._Static_Pressure;
		}
		set
		{
			if ((this._Static_Pressure != value))
			{
				this.OnStatic_PressureChanging(value);
				this.SendPropertyChanging();
				this._Static_Pressure = value;
				this.SendPropertyChanged("Static_Pressure");
				this.OnStatic_PressureChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Input_Voltage", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Input_Voltage
	{
		get
		{
			return this._Input_Voltage;
		}
		set
		{
			if ((this._Input_Voltage != value))
			{
				this.OnInput_VoltageChanging(value);
				this.SendPropertyChanging();
				this._Input_Voltage = value;
				this.SendPropertyChanged("Input_Voltage");
				this.OnInput_VoltageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MBTF", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string MBTF
	{
		get
		{
			return this._MBTF;
		}
		set
		{
			if ((this._MBTF != value))
			{
				this.OnMBTFChanging(value);
				this.SendPropertyChanging();
				this._MBTF = value;
				this.SendPropertyChanged("MBTF");
				this.OnMBTFChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cable_Length", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Cable_Length
	{
		get
		{
			return this._Cable_Length;
		}
		set
		{
			if ((this._Cable_Length != value))
			{
				this.OnCable_LengthChanging(value);
				this.SendPropertyChanging();
				this._Cable_Length = value;
				this.SendPropertyChanged("Cable_Length");
				this.OnCable_LengthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Package_Contents", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Package_Contents
	{
		get
		{
			return this._Package_Contents;
		}
		set
		{
			if ((this._Package_Contents != value))
			{
				this.OnPackage_ContentsChanging(value);
				this.SendPropertyChanging();
				this._Package_Contents = value;
				this.SendPropertyChanged("Package_Contents");
				this.OnPackage_ContentsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warranty", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Warranty
	{
		get
		{
			return this._Warranty;
		}
		set
		{
			if ((this._Warranty != value))
			{
				this.OnWarrantyChanging(value);
				this.SendPropertyChanging();
				this._Warranty = value;
				this.SendPropertyChanged("Warranty");
				this.OnWarrantyChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GPU")]
public partial class GPU : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Model;
	
	private string _Chipset;
	
	private string _Interface;
	
	private string _Clock_Speed_Base;
	
	private string _Clock_Speed_Boost;
	
	private string _Stream_Processors;
	
	private string _Memory_Clock;
	
	private string _Memory_Size;
	
	private string _Memory_Interface;
	
	private string _Memory_Type;
	
	private string _Ports;
	
	private string _Max_Digital_Resolution;
	
	private string _VR_Ready;
	
	private string _CrossFire_Support;
	
	private string _Recommended_Power_Supply;
	
	private string _Form_Factor;
	
	private string _Slot_Width;
	
	private string _Dimensions;
	
	private string _Warranty;
	
	private EntitySet<GpuToMonitor> _GpuToMonitors;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnChipsetChanging(string value);
    partial void OnChipsetChanged();
    partial void OnInterfaceChanging(string value);
    partial void OnInterfaceChanged();
    partial void OnClock_Speed_BaseChanging(string value);
    partial void OnClock_Speed_BaseChanged();
    partial void OnClock_Speed_BoostChanging(string value);
    partial void OnClock_Speed_BoostChanged();
    partial void OnStream_ProcessorsChanging(string value);
    partial void OnStream_ProcessorsChanged();
    partial void OnMemory_ClockChanging(string value);
    partial void OnMemory_ClockChanged();
    partial void OnMemory_SizeChanging(string value);
    partial void OnMemory_SizeChanged();
    partial void OnMemory_InterfaceChanging(string value);
    partial void OnMemory_InterfaceChanged();
    partial void OnMemory_TypeChanging(string value);
    partial void OnMemory_TypeChanged();
    partial void OnPortsChanging(string value);
    partial void OnPortsChanged();
    partial void OnMax_Digital_ResolutionChanging(string value);
    partial void OnMax_Digital_ResolutionChanged();
    partial void OnVR_ReadyChanging(string value);
    partial void OnVR_ReadyChanged();
    partial void OnCrossFire_SupportChanging(string value);
    partial void OnCrossFire_SupportChanged();
    partial void OnRecommended_Power_SupplyChanging(string value);
    partial void OnRecommended_Power_SupplyChanged();
    partial void OnForm_FactorChanging(string value);
    partial void OnForm_FactorChanged();
    partial void OnSlot_WidthChanging(string value);
    partial void OnSlot_WidthChanged();
    partial void OnDimensionsChanging(string value);
    partial void OnDimensionsChanged();
    partial void OnWarrantyChanging(string value);
    partial void OnWarrantyChanged();
    #endregion
	
	public GPU()
	{
		this._GpuToMonitors = new EntitySet<GpuToMonitor>(new Action<GpuToMonitor>(this.attach_GpuToMonitors), new Action<GpuToMonitor>(this.detach_GpuToMonitors));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chipset", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Chipset
	{
		get
		{
			return this._Chipset;
		}
		set
		{
			if ((this._Chipset != value))
			{
				this.OnChipsetChanging(value);
				this.SendPropertyChanging();
				this._Chipset = value;
				this.SendPropertyChanged("Chipset");
				this.OnChipsetChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interface", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Interface
	{
		get
		{
			return this._Interface;
		}
		set
		{
			if ((this._Interface != value))
			{
				this.OnInterfaceChanging(value);
				this.SendPropertyChanging();
				this._Interface = value;
				this.SendPropertyChanged("Interface");
				this.OnInterfaceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clock_Speed_Base", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Clock_Speed_Base
	{
		get
		{
			return this._Clock_Speed_Base;
		}
		set
		{
			if ((this._Clock_Speed_Base != value))
			{
				this.OnClock_Speed_BaseChanging(value);
				this.SendPropertyChanging();
				this._Clock_Speed_Base = value;
				this.SendPropertyChanged("Clock_Speed_Base");
				this.OnClock_Speed_BaseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clock_Speed_Boost", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Clock_Speed_Boost
	{
		get
		{
			return this._Clock_Speed_Boost;
		}
		set
		{
			if ((this._Clock_Speed_Boost != value))
			{
				this.OnClock_Speed_BoostChanging(value);
				this.SendPropertyChanging();
				this._Clock_Speed_Boost = value;
				this.SendPropertyChanged("Clock_Speed_Boost");
				this.OnClock_Speed_BoostChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stream_Processors", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Stream_Processors
	{
		get
		{
			return this._Stream_Processors;
		}
		set
		{
			if ((this._Stream_Processors != value))
			{
				this.OnStream_ProcessorsChanging(value);
				this.SendPropertyChanging();
				this._Stream_Processors = value;
				this.SendPropertyChanged("Stream_Processors");
				this.OnStream_ProcessorsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memory_Clock", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Memory_Clock
	{
		get
		{
			return this._Memory_Clock;
		}
		set
		{
			if ((this._Memory_Clock != value))
			{
				this.OnMemory_ClockChanging(value);
				this.SendPropertyChanging();
				this._Memory_Clock = value;
				this.SendPropertyChanged("Memory_Clock");
				this.OnMemory_ClockChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memory_Size", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Memory_Size
	{
		get
		{
			return this._Memory_Size;
		}
		set
		{
			if ((this._Memory_Size != value))
			{
				this.OnMemory_SizeChanging(value);
				this.SendPropertyChanging();
				this._Memory_Size = value;
				this.SendPropertyChanged("Memory_Size");
				this.OnMemory_SizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memory_Interface", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Memory_Interface
	{
		get
		{
			return this._Memory_Interface;
		}
		set
		{
			if ((this._Memory_Interface != value))
			{
				this.OnMemory_InterfaceChanging(value);
				this.SendPropertyChanging();
				this._Memory_Interface = value;
				this.SendPropertyChanged("Memory_Interface");
				this.OnMemory_InterfaceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memory_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Memory_Type
	{
		get
		{
			return this._Memory_Type;
		}
		set
		{
			if ((this._Memory_Type != value))
			{
				this.OnMemory_TypeChanging(value);
				this.SendPropertyChanging();
				this._Memory_Type = value;
				this.SendPropertyChanged("Memory_Type");
				this.OnMemory_TypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ports", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Ports
	{
		get
		{
			return this._Ports;
		}
		set
		{
			if ((this._Ports != value))
			{
				this.OnPortsChanging(value);
				this.SendPropertyChanging();
				this._Ports = value;
				this.SendPropertyChanged("Ports");
				this.OnPortsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Max_Digital_Resolution", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Max_Digital_Resolution
	{
		get
		{
			return this._Max_Digital_Resolution;
		}
		set
		{
			if ((this._Max_Digital_Resolution != value))
			{
				this.OnMax_Digital_ResolutionChanging(value);
				this.SendPropertyChanging();
				this._Max_Digital_Resolution = value;
				this.SendPropertyChanged("Max_Digital_Resolution");
				this.OnMax_Digital_ResolutionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VR_Ready", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string VR_Ready
	{
		get
		{
			return this._VR_Ready;
		}
		set
		{
			if ((this._VR_Ready != value))
			{
				this.OnVR_ReadyChanging(value);
				this.SendPropertyChanging();
				this._VR_Ready = value;
				this.SendPropertyChanged("VR_Ready");
				this.OnVR_ReadyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrossFire_Support", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string CrossFire_Support
	{
		get
		{
			return this._CrossFire_Support;
		}
		set
		{
			if ((this._CrossFire_Support != value))
			{
				this.OnCrossFire_SupportChanging(value);
				this.SendPropertyChanging();
				this._CrossFire_Support = value;
				this.SendPropertyChanged("CrossFire_Support");
				this.OnCrossFire_SupportChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recommended_Power_Supply", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Recommended_Power_Supply
	{
		get
		{
			return this._Recommended_Power_Supply;
		}
		set
		{
			if ((this._Recommended_Power_Supply != value))
			{
				this.OnRecommended_Power_SupplyChanging(value);
				this.SendPropertyChanging();
				this._Recommended_Power_Supply = value;
				this.SendPropertyChanged("Recommended_Power_Supply");
				this.OnRecommended_Power_SupplyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form_Factor", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Form_Factor
	{
		get
		{
			return this._Form_Factor;
		}
		set
		{
			if ((this._Form_Factor != value))
			{
				this.OnForm_FactorChanging(value);
				this.SendPropertyChanging();
				this._Form_Factor = value;
				this.SendPropertyChanged("Form_Factor");
				this.OnForm_FactorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slot_Width", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Slot_Width
	{
		get
		{
			return this._Slot_Width;
		}
		set
		{
			if ((this._Slot_Width != value))
			{
				this.OnSlot_WidthChanging(value);
				this.SendPropertyChanging();
				this._Slot_Width = value;
				this.SendPropertyChanged("Slot_Width");
				this.OnSlot_WidthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dimensions", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Dimensions
	{
		get
		{
			return this._Dimensions;
		}
		set
		{
			if ((this._Dimensions != value))
			{
				this.OnDimensionsChanging(value);
				this.SendPropertyChanging();
				this._Dimensions = value;
				this.SendPropertyChanged("Dimensions");
				this.OnDimensionsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warranty", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Warranty
	{
		get
		{
			return this._Warranty;
		}
		set
		{
			if ((this._Warranty != value))
			{
				this.OnWarrantyChanging(value);
				this.SendPropertyChanging();
				this._Warranty = value;
				this.SendPropertyChanged("Warranty");
				this.OnWarrantyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GPU_GpuToMonitor", Storage="_GpuToMonitors", ThisKey="Model", OtherKey="GPU_Model")]
	public EntitySet<GpuToMonitor> GpuToMonitors
	{
		get
		{
			return this._GpuToMonitors;
		}
		set
		{
			this._GpuToMonitors.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_GpuToMonitors(GpuToMonitor entity)
	{
		this.SendPropertyChanging();
		entity.GPU = this;
	}
	
	private void detach_GpuToMonitors(GpuToMonitor entity)
	{
		this.SendPropertyChanging();
		entity.GPU = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GpuToMonitor")]
public partial class GpuToMonitor : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _GPU_Model;
	
	private string _Monitor_Model;
	
	private string _Display_Ports;
	
	private string _HDMI;
	
	private string _VGA;
	
	private EntityRef<GPU> _GPU;
	
	private EntityRef<Monitor> _Monitor;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGPU_ModelChanging(string value);
    partial void OnGPU_ModelChanged();
    partial void OnMonitor_ModelChanging(string value);
    partial void OnMonitor_ModelChanged();
    partial void OnDisplay_PortsChanging(string value);
    partial void OnDisplay_PortsChanged();
    partial void OnHDMIChanging(string value);
    partial void OnHDMIChanged();
    partial void OnVGAChanging(string value);
    partial void OnVGAChanged();
    #endregion
	
	public GpuToMonitor()
	{
		this._GPU = default(EntityRef<GPU>);
		this._Monitor = default(EntityRef<Monitor>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPU_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string GPU_Model
	{
		get
		{
			return this._GPU_Model;
		}
		set
		{
			if ((this._GPU_Model != value))
			{
				if (this._GPU.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnGPU_ModelChanging(value);
				this.SendPropertyChanging();
				this._GPU_Model = value;
				this.SendPropertyChanged("GPU_Model");
				this.OnGPU_ModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Monitor_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Monitor_Model
	{
		get
		{
			return this._Monitor_Model;
		}
		set
		{
			if ((this._Monitor_Model != value))
			{
				if (this._Monitor.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMonitor_ModelChanging(value);
				this.SendPropertyChanging();
				this._Monitor_Model = value;
				this.SendPropertyChanged("Monitor_Model");
				this.OnMonitor_ModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Display_Ports", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string Display_Ports
	{
		get
		{
			return this._Display_Ports;
		}
		set
		{
			if ((this._Display_Ports != value))
			{
				this.OnDisplay_PortsChanging(value);
				this.SendPropertyChanging();
				this._Display_Ports = value;
				this.SendPropertyChanged("Display_Ports");
				this.OnDisplay_PortsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HDMI", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string HDMI
	{
		get
		{
			return this._HDMI;
		}
		set
		{
			if ((this._HDMI != value))
			{
				this.OnHDMIChanging(value);
				this.SendPropertyChanging();
				this._HDMI = value;
				this.SendPropertyChanged("HDMI");
				this.OnHDMIChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VGA", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string VGA
	{
		get
		{
			return this._VGA;
		}
		set
		{
			if ((this._VGA != value))
			{
				this.OnVGAChanging(value);
				this.SendPropertyChanging();
				this._VGA = value;
				this.SendPropertyChanged("VGA");
				this.OnVGAChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GPU_GpuToMonitor", Storage="_GPU", ThisKey="GPU_Model", OtherKey="Model", IsForeignKey=true)]
	public GPU GPU
	{
		get
		{
			return this._GPU.Entity;
		}
		set
		{
			GPU previousValue = this._GPU.Entity;
			if (((previousValue != value) 
						|| (this._GPU.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._GPU.Entity = null;
					previousValue.GpuToMonitors.Remove(this);
				}
				this._GPU.Entity = value;
				if ((value != null))
				{
					value.GpuToMonitors.Add(this);
					this._GPU_Model = value.Model;
				}
				else
				{
					this._GPU_Model = default(string);
				}
				this.SendPropertyChanged("GPU");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Monitor_GpuToMonitor", Storage="_Monitor", ThisKey="Monitor_Model", OtherKey="Model", IsForeignKey=true)]
	public Monitor Monitor
	{
		get
		{
			return this._Monitor.Entity;
		}
		set
		{
			Monitor previousValue = this._Monitor.Entity;
			if (((previousValue != value) 
						|| (this._Monitor.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Monitor.Entity = null;
					previousValue.GpuToMonitors.Remove(this);
				}
				this._Monitor.Entity = value;
				if ((value != null))
				{
					value.GpuToMonitors.Add(this);
					this._Monitor_Model = value.Model;
				}
				else
				{
					this._Monitor_Model = default(string);
				}
				this.SendPropertyChanged("Monitor");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HDD")]
public partial class HDD : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Model;
	
	private string _Brand;
	
	private string _Series;
	
	private string _Interface;
	
	private string _Bytes_Per_Sector;
	
	private string _Max_Sustained_Transfer_Rate;
	
	private string _Rotational_Speed;
	
	private string _Load_Unload_Cycles;
	
	private string _Workload_Rate_Limit;
	
	private string _Idle_Power_Usage;
	
	private string _Typical_Power_Usage;
	
	private string _Operating_Temp;
	
	private string _Storage_Temp;
	
	private string _Dimensions;
	
	private string _Weight;
	
	private string _Warranty;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnSeriesChanging(string value);
    partial void OnSeriesChanged();
    partial void OnInterfaceChanging(string value);
    partial void OnInterfaceChanged();
    partial void OnBytes_Per_SectorChanging(string value);
    partial void OnBytes_Per_SectorChanged();
    partial void OnMax_Sustained_Transfer_RateChanging(string value);
    partial void OnMax_Sustained_Transfer_RateChanged();
    partial void OnRotational_SpeedChanging(string value);
    partial void OnRotational_SpeedChanged();
    partial void OnLoad_Unload_CyclesChanging(string value);
    partial void OnLoad_Unload_CyclesChanged();
    partial void OnWorkload_Rate_LimitChanging(string value);
    partial void OnWorkload_Rate_LimitChanged();
    partial void OnIdle_Power_UsageChanging(string value);
    partial void OnIdle_Power_UsageChanged();
    partial void OnTypical_Power_UsageChanging(string value);
    partial void OnTypical_Power_UsageChanged();
    partial void OnOperating_TempChanging(string value);
    partial void OnOperating_TempChanged();
    partial void OnStorage_TempChanging(string value);
    partial void OnStorage_TempChanged();
    partial void OnDimensionsChanging(string value);
    partial void OnDimensionsChanged();
    partial void OnWeightChanging(string value);
    partial void OnWeightChanged();
    partial void OnWarrantyChanging(string value);
    partial void OnWarrantyChanged();
    #endregion
	
	public HDD()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this.OnBrandChanging(value);
				this.SendPropertyChanging();
				this._Brand = value;
				this.SendPropertyChanged("Brand");
				this.OnBrandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Series", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Series
	{
		get
		{
			return this._Series;
		}
		set
		{
			if ((this._Series != value))
			{
				this.OnSeriesChanging(value);
				this.SendPropertyChanging();
				this._Series = value;
				this.SendPropertyChanged("Series");
				this.OnSeriesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interface", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Interface
	{
		get
		{
			return this._Interface;
		}
		set
		{
			if ((this._Interface != value))
			{
				this.OnInterfaceChanging(value);
				this.SendPropertyChanging();
				this._Interface = value;
				this.SendPropertyChanged("Interface");
				this.OnInterfaceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bytes_Per_Sector", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Bytes_Per_Sector
	{
		get
		{
			return this._Bytes_Per_Sector;
		}
		set
		{
			if ((this._Bytes_Per_Sector != value))
			{
				this.OnBytes_Per_SectorChanging(value);
				this.SendPropertyChanging();
				this._Bytes_Per_Sector = value;
				this.SendPropertyChanged("Bytes_Per_Sector");
				this.OnBytes_Per_SectorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Max_Sustained_Transfer_Rate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Max_Sustained_Transfer_Rate
	{
		get
		{
			return this._Max_Sustained_Transfer_Rate;
		}
		set
		{
			if ((this._Max_Sustained_Transfer_Rate != value))
			{
				this.OnMax_Sustained_Transfer_RateChanging(value);
				this.SendPropertyChanging();
				this._Max_Sustained_Transfer_Rate = value;
				this.SendPropertyChanged("Max_Sustained_Transfer_Rate");
				this.OnMax_Sustained_Transfer_RateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rotational_Speed", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Rotational_Speed
	{
		get
		{
			return this._Rotational_Speed;
		}
		set
		{
			if ((this._Rotational_Speed != value))
			{
				this.OnRotational_SpeedChanging(value);
				this.SendPropertyChanging();
				this._Rotational_Speed = value;
				this.SendPropertyChanged("Rotational_Speed");
				this.OnRotational_SpeedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Load_Unload_Cycles", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Load_Unload_Cycles
	{
		get
		{
			return this._Load_Unload_Cycles;
		}
		set
		{
			if ((this._Load_Unload_Cycles != value))
			{
				this.OnLoad_Unload_CyclesChanging(value);
				this.SendPropertyChanging();
				this._Load_Unload_Cycles = value;
				this.SendPropertyChanged("Load_Unload_Cycles");
				this.OnLoad_Unload_CyclesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Workload_Rate_Limit", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Workload_Rate_Limit
	{
		get
		{
			return this._Workload_Rate_Limit;
		}
		set
		{
			if ((this._Workload_Rate_Limit != value))
			{
				this.OnWorkload_Rate_LimitChanging(value);
				this.SendPropertyChanging();
				this._Workload_Rate_Limit = value;
				this.SendPropertyChanged("Workload_Rate_Limit");
				this.OnWorkload_Rate_LimitChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Idle_Power_Usage", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Idle_Power_Usage
	{
		get
		{
			return this._Idle_Power_Usage;
		}
		set
		{
			if ((this._Idle_Power_Usage != value))
			{
				this.OnIdle_Power_UsageChanging(value);
				this.SendPropertyChanging();
				this._Idle_Power_Usage = value;
				this.SendPropertyChanged("Idle_Power_Usage");
				this.OnIdle_Power_UsageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Typical_Power_Usage", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Typical_Power_Usage
	{
		get
		{
			return this._Typical_Power_Usage;
		}
		set
		{
			if ((this._Typical_Power_Usage != value))
			{
				this.OnTypical_Power_UsageChanging(value);
				this.SendPropertyChanging();
				this._Typical_Power_Usage = value;
				this.SendPropertyChanged("Typical_Power_Usage");
				this.OnTypical_Power_UsageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operating_Temp", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Operating_Temp
	{
		get
		{
			return this._Operating_Temp;
		}
		set
		{
			if ((this._Operating_Temp != value))
			{
				this.OnOperating_TempChanging(value);
				this.SendPropertyChanging();
				this._Operating_Temp = value;
				this.SendPropertyChanged("Operating_Temp");
				this.OnOperating_TempChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Storage_Temp", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Storage_Temp
	{
		get
		{
			return this._Storage_Temp;
		}
		set
		{
			if ((this._Storage_Temp != value))
			{
				this.OnStorage_TempChanging(value);
				this.SendPropertyChanging();
				this._Storage_Temp = value;
				this.SendPropertyChanged("Storage_Temp");
				this.OnStorage_TempChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dimensions", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Dimensions
	{
		get
		{
			return this._Dimensions;
		}
		set
		{
			if ((this._Dimensions != value))
			{
				this.OnDimensionsChanging(value);
				this.SendPropertyChanging();
				this._Dimensions = value;
				this.SendPropertyChanged("Dimensions");
				this.OnDimensionsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this.OnWeightChanging(value);
				this.SendPropertyChanging();
				this._Weight = value;
				this.SendPropertyChanged("Weight");
				this.OnWeightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warranty", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Warranty
	{
		get
		{
			return this._Warranty;
		}
		set
		{
			if ((this._Warranty != value))
			{
				this.OnWarrantyChanging(value);
				this.SendPropertyChanging();
				this._Warranty = value;
				this.SendPropertyChanged("Warranty");
				this.OnWarrantyChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Headset")]
public partial class Headset : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Model;
	
	private string _Brand;
	
	private string _Series;
	
	private string _Cable_Length;
	
	private string _Connector;
	
	private string _Compatibility;
	
	private string _Frequency_Response;
	
	private string _Sound_Pressure_Level;
	
	private string _Microphone;
	
	private string _MP_Frequency_Response;
	
	private string _MP_Pickup_Pattern;
	
	private string _MP_Sensitivity;
	
	private string _Colour;
	
	private string _Wearing_Style;
	
	private string _Weight;
	
	private string _Features;
	
	private string _Warranty;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnSeriesChanging(string value);
    partial void OnSeriesChanged();
    partial void OnCable_LengthChanging(string value);
    partial void OnCable_LengthChanged();
    partial void OnConnectorChanging(string value);
    partial void OnConnectorChanged();
    partial void OnCompatibilityChanging(string value);
    partial void OnCompatibilityChanged();
    partial void OnFrequency_ResponseChanging(string value);
    partial void OnFrequency_ResponseChanged();
    partial void OnSound_Pressure_LevelChanging(string value);
    partial void OnSound_Pressure_LevelChanged();
    partial void OnMicrophoneChanging(string value);
    partial void OnMicrophoneChanged();
    partial void OnMP_Frequency_ResponseChanging(string value);
    partial void OnMP_Frequency_ResponseChanged();
    partial void OnMP_Pickup_PatternChanging(string value);
    partial void OnMP_Pickup_PatternChanged();
    partial void OnMP_SensitivityChanging(string value);
    partial void OnMP_SensitivityChanged();
    partial void OnColourChanging(string value);
    partial void OnColourChanged();
    partial void OnWearing_StyleChanging(string value);
    partial void OnWearing_StyleChanged();
    partial void OnWeightChanging(string value);
    partial void OnWeightChanged();
    partial void OnFeaturesChanging(string value);
    partial void OnFeaturesChanged();
    partial void OnWarrantyChanging(string value);
    partial void OnWarrantyChanged();
    #endregion
	
	public Headset()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(255)")]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this.OnBrandChanging(value);
				this.SendPropertyChanging();
				this._Brand = value;
				this.SendPropertyChanged("Brand");
				this.OnBrandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Series", DbType="VarChar(255)")]
	public string Series
	{
		get
		{
			return this._Series;
		}
		set
		{
			if ((this._Series != value))
			{
				this.OnSeriesChanging(value);
				this.SendPropertyChanging();
				this._Series = value;
				this.SendPropertyChanged("Series");
				this.OnSeriesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cable_Length", DbType="VarChar(50)")]
	public string Cable_Length
	{
		get
		{
			return this._Cable_Length;
		}
		set
		{
			if ((this._Cable_Length != value))
			{
				this.OnCable_LengthChanging(value);
				this.SendPropertyChanging();
				this._Cable_Length = value;
				this.SendPropertyChanged("Cable_Length");
				this.OnCable_LengthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connector", DbType="VarChar(50)")]
	public string Connector
	{
		get
		{
			return this._Connector;
		}
		set
		{
			if ((this._Connector != value))
			{
				this.OnConnectorChanging(value);
				this.SendPropertyChanging();
				this._Connector = value;
				this.SendPropertyChanged("Connector");
				this.OnConnectorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Compatibility", DbType="VarChar(50)")]
	public string Compatibility
	{
		get
		{
			return this._Compatibility;
		}
		set
		{
			if ((this._Compatibility != value))
			{
				this.OnCompatibilityChanging(value);
				this.SendPropertyChanging();
				this._Compatibility = value;
				this.SendPropertyChanged("Compatibility");
				this.OnCompatibilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency_Response", DbType="VarChar(50)")]
	public string Frequency_Response
	{
		get
		{
			return this._Frequency_Response;
		}
		set
		{
			if ((this._Frequency_Response != value))
			{
				this.OnFrequency_ResponseChanging(value);
				this.SendPropertyChanging();
				this._Frequency_Response = value;
				this.SendPropertyChanged("Frequency_Response");
				this.OnFrequency_ResponseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sound_Pressure_Level", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Sound_Pressure_Level
	{
		get
		{
			return this._Sound_Pressure_Level;
		}
		set
		{
			if ((this._Sound_Pressure_Level != value))
			{
				this.OnSound_Pressure_LevelChanging(value);
				this.SendPropertyChanging();
				this._Sound_Pressure_Level = value;
				this.SendPropertyChanged("Sound_Pressure_Level");
				this.OnSound_Pressure_LevelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Microphone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Microphone
	{
		get
		{
			return this._Microphone;
		}
		set
		{
			if ((this._Microphone != value))
			{
				this.OnMicrophoneChanging(value);
				this.SendPropertyChanging();
				this._Microphone = value;
				this.SendPropertyChanged("Microphone");
				this.OnMicrophoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MP_Frequency_Response", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string MP_Frequency_Response
	{
		get
		{
			return this._MP_Frequency_Response;
		}
		set
		{
			if ((this._MP_Frequency_Response != value))
			{
				this.OnMP_Frequency_ResponseChanging(value);
				this.SendPropertyChanging();
				this._MP_Frequency_Response = value;
				this.SendPropertyChanged("MP_Frequency_Response");
				this.OnMP_Frequency_ResponseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MP_Pickup_Pattern", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string MP_Pickup_Pattern
	{
		get
		{
			return this._MP_Pickup_Pattern;
		}
		set
		{
			if ((this._MP_Pickup_Pattern != value))
			{
				this.OnMP_Pickup_PatternChanging(value);
				this.SendPropertyChanging();
				this._MP_Pickup_Pattern = value;
				this.SendPropertyChanged("MP_Pickup_Pattern");
				this.OnMP_Pickup_PatternChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MP_Sensitivity", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string MP_Sensitivity
	{
		get
		{
			return this._MP_Sensitivity;
		}
		set
		{
			if ((this._MP_Sensitivity != value))
			{
				this.OnMP_SensitivityChanging(value);
				this.SendPropertyChanging();
				this._MP_Sensitivity = value;
				this.SendPropertyChanged("MP_Sensitivity");
				this.OnMP_SensitivityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Colour", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Colour
	{
		get
		{
			return this._Colour;
		}
		set
		{
			if ((this._Colour != value))
			{
				this.OnColourChanging(value);
				this.SendPropertyChanging();
				this._Colour = value;
				this.SendPropertyChanged("Colour");
				this.OnColourChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wearing_Style", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Wearing_Style
	{
		get
		{
			return this._Wearing_Style;
		}
		set
		{
			if ((this._Wearing_Style != value))
			{
				this.OnWearing_StyleChanging(value);
				this.SendPropertyChanging();
				this._Wearing_Style = value;
				this.SendPropertyChanged("Wearing_Style");
				this.OnWearing_StyleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this.OnWeightChanging(value);
				this.SendPropertyChanging();
				this._Weight = value;
				this.SendPropertyChanged("Weight");
				this.OnWeightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Features", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Features
	{
		get
		{
			return this._Features;
		}
		set
		{
			if ((this._Features != value))
			{
				this.OnFeaturesChanging(value);
				this.SendPropertyChanging();
				this._Features = value;
				this.SendPropertyChanged("Features");
				this.OnFeaturesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warranty", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Warranty
	{
		get
		{
			return this._Warranty;
		}
		set
		{
			if ((this._Warranty != value))
			{
				this.OnWarrantyChanging(value);
				this.SendPropertyChanging();
				this._Warranty = value;
				this.SendPropertyChanged("Warranty");
				this.OnWarrantyChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Keyboard")]
public partial class Keyboard : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Model;
	
	private string _Brand;
	
	private string _Series;
	
	private string _Switches;
	
	private string _Programmable_Macros;
	
	private string _Connector;
	
	private string _LED_BackLight;
	
	private string _Multimedia_Keys;
	
	private string _Material;
	
	private string _Dimensions;
	
	private string _Weight;
	
	private string _Warranty;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnSeriesChanging(string value);
    partial void OnSeriesChanged();
    partial void OnSwitchesChanging(string value);
    partial void OnSwitchesChanged();
    partial void OnProgrammable_MacrosChanging(string value);
    partial void OnProgrammable_MacrosChanged();
    partial void OnConnectorChanging(string value);
    partial void OnConnectorChanged();
    partial void OnLED_BackLightChanging(string value);
    partial void OnLED_BackLightChanged();
    partial void OnMultimedia_KeysChanging(string value);
    partial void OnMultimedia_KeysChanged();
    partial void OnMaterialChanging(string value);
    partial void OnMaterialChanged();
    partial void OnDimensionsChanging(string value);
    partial void OnDimensionsChanged();
    partial void OnWeightChanging(string value);
    partial void OnWeightChanged();
    partial void OnWarrantyChanging(string value);
    partial void OnWarrantyChanged();
    #endregion
	
	public Keyboard()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this.OnBrandChanging(value);
				this.SendPropertyChanging();
				this._Brand = value;
				this.SendPropertyChanged("Brand");
				this.OnBrandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Series", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Series
	{
		get
		{
			return this._Series;
		}
		set
		{
			if ((this._Series != value))
			{
				this.OnSeriesChanging(value);
				this.SendPropertyChanging();
				this._Series = value;
				this.SendPropertyChanged("Series");
				this.OnSeriesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Switches", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Switches
	{
		get
		{
			return this._Switches;
		}
		set
		{
			if ((this._Switches != value))
			{
				this.OnSwitchesChanging(value);
				this.SendPropertyChanging();
				this._Switches = value;
				this.SendPropertyChanged("Switches");
				this.OnSwitchesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Programmable_Macros", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Programmable_Macros
	{
		get
		{
			return this._Programmable_Macros;
		}
		set
		{
			if ((this._Programmable_Macros != value))
			{
				this.OnProgrammable_MacrosChanging(value);
				this.SendPropertyChanging();
				this._Programmable_Macros = value;
				this.SendPropertyChanged("Programmable_Macros");
				this.OnProgrammable_MacrosChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connector", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Connector
	{
		get
		{
			return this._Connector;
		}
		set
		{
			if ((this._Connector != value))
			{
				this.OnConnectorChanging(value);
				this.SendPropertyChanging();
				this._Connector = value;
				this.SendPropertyChanged("Connector");
				this.OnConnectorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LED_BackLight", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string LED_BackLight
	{
		get
		{
			return this._LED_BackLight;
		}
		set
		{
			if ((this._LED_BackLight != value))
			{
				this.OnLED_BackLightChanging(value);
				this.SendPropertyChanging();
				this._LED_BackLight = value;
				this.SendPropertyChanged("LED_BackLight");
				this.OnLED_BackLightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Multimedia_Keys", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Multimedia_Keys
	{
		get
		{
			return this._Multimedia_Keys;
		}
		set
		{
			if ((this._Multimedia_Keys != value))
			{
				this.OnMultimedia_KeysChanging(value);
				this.SendPropertyChanging();
				this._Multimedia_Keys = value;
				this.SendPropertyChanged("Multimedia_Keys");
				this.OnMultimedia_KeysChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Material
	{
		get
		{
			return this._Material;
		}
		set
		{
			if ((this._Material != value))
			{
				this.OnMaterialChanging(value);
				this.SendPropertyChanging();
				this._Material = value;
				this.SendPropertyChanged("Material");
				this.OnMaterialChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dimensions", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Dimensions
	{
		get
		{
			return this._Dimensions;
		}
		set
		{
			if ((this._Dimensions != value))
			{
				this.OnDimensionsChanging(value);
				this.SendPropertyChanging();
				this._Dimensions = value;
				this.SendPropertyChanged("Dimensions");
				this.OnDimensionsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this.OnWeightChanging(value);
				this.SendPropertyChanging();
				this._Weight = value;
				this.SendPropertyChanged("Weight");
				this.OnWeightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warranty", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Warranty
	{
		get
		{
			return this._Warranty;
		}
		set
		{
			if ((this._Warranty != value))
			{
				this.OnWarrantyChanging(value);
				this.SendPropertyChanging();
				this._Warranty = value;
				this.SendPropertyChanged("Warranty");
				this.OnWarrantyChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LiquidCooler")]
public partial class LiquidCooler : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Model;
	
	private string _Brand;
	
	private string _Series;
	
	private string _Fan_Size;
	
	private string _Fan_RPM;
	
	private string _Fan_PWM_Control;
	
	private string _Fan_Noise;
	
	private string _Fan_Max_Air_Flow;
	
	private string _Fan_Max_Static_Pressure;
	
	private string _Fan_Input_Voltage;
	
	private string _Fan_MTBF;
	
	private string _Pump_RPM;
	
	private string _Pump_PWM_Control;
	
	private string _Pump_Max_Pressure;
	
	private string _Pump_Rated_Input_Power;
	
	private string _Pump_MTBF;
	
	private string _Radiator_Housing_Mats;
	
	private string _Radiator_Fin_Mats;
	
	private string _Fan_Screw_Threads;
	
	private string _Radiator_Dimensions;
	
	private string _Coldplate_Material;
	
	private string _Thermal_Paste;
	
	private string _Fittings;
	
	private string _Tube_Length;
	
	private string _Tube_Mats;
	
	private string _Sockets_Supported;
	
	private string _RGB;
	
	private string _Package_Contents;
	
	private string _Warranty;
	
	private EntitySet<CpuToLiquidCooler> _CpuToLiquidCoolers;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnSeriesChanging(string value);
    partial void OnSeriesChanged();
    partial void OnFan_SizeChanging(string value);
    partial void OnFan_SizeChanged();
    partial void OnFan_RPMChanging(string value);
    partial void OnFan_RPMChanged();
    partial void OnFan_PWM_ControlChanging(string value);
    partial void OnFan_PWM_ControlChanged();
    partial void OnFan_NoiseChanging(string value);
    partial void OnFan_NoiseChanged();
    partial void OnFan_Max_Air_FlowChanging(string value);
    partial void OnFan_Max_Air_FlowChanged();
    partial void OnFan_Max_Static_PressureChanging(string value);
    partial void OnFan_Max_Static_PressureChanged();
    partial void OnFan_Input_VoltageChanging(string value);
    partial void OnFan_Input_VoltageChanged();
    partial void OnFan_MTBFChanging(string value);
    partial void OnFan_MTBFChanged();
    partial void OnPump_RPMChanging(string value);
    partial void OnPump_RPMChanged();
    partial void OnPump_PWM_ControlChanging(string value);
    partial void OnPump_PWM_ControlChanged();
    partial void OnPump_Max_PressureChanging(string value);
    partial void OnPump_Max_PressureChanged();
    partial void OnPump_Rated_Input_PowerChanging(string value);
    partial void OnPump_Rated_Input_PowerChanged();
    partial void OnPump_MTBFChanging(string value);
    partial void OnPump_MTBFChanged();
    partial void OnRadiator_Housing_MatsChanging(string value);
    partial void OnRadiator_Housing_MatsChanged();
    partial void OnRadiator_Fin_MatsChanging(string value);
    partial void OnRadiator_Fin_MatsChanged();
    partial void OnFan_Screw_ThreadsChanging(string value);
    partial void OnFan_Screw_ThreadsChanged();
    partial void OnRadiator_DimensionsChanging(string value);
    partial void OnRadiator_DimensionsChanged();
    partial void OnColdplate_MaterialChanging(string value);
    partial void OnColdplate_MaterialChanged();
    partial void OnThermal_PasteChanging(string value);
    partial void OnThermal_PasteChanged();
    partial void OnFittingsChanging(string value);
    partial void OnFittingsChanged();
    partial void OnTube_LengthChanging(string value);
    partial void OnTube_LengthChanged();
    partial void OnTube_MatsChanging(string value);
    partial void OnTube_MatsChanged();
    partial void OnSockets_SupportedChanging(string value);
    partial void OnSockets_SupportedChanged();
    partial void OnRGBChanging(string value);
    partial void OnRGBChanged();
    partial void OnPackage_ContentsChanging(string value);
    partial void OnPackage_ContentsChanged();
    partial void OnWarrantyChanging(string value);
    partial void OnWarrantyChanged();
    #endregion
	
	public LiquidCooler()
	{
		this._CpuToLiquidCoolers = new EntitySet<CpuToLiquidCooler>(new Action<CpuToLiquidCooler>(this.attach_CpuToLiquidCoolers), new Action<CpuToLiquidCooler>(this.detach_CpuToLiquidCoolers));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this.OnBrandChanging(value);
				this.SendPropertyChanging();
				this._Brand = value;
				this.SendPropertyChanged("Brand");
				this.OnBrandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Series", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Series
	{
		get
		{
			return this._Series;
		}
		set
		{
			if ((this._Series != value))
			{
				this.OnSeriesChanging(value);
				this.SendPropertyChanging();
				this._Series = value;
				this.SendPropertyChanged("Series");
				this.OnSeriesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fan_Size", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Fan_Size
	{
		get
		{
			return this._Fan_Size;
		}
		set
		{
			if ((this._Fan_Size != value))
			{
				this.OnFan_SizeChanging(value);
				this.SendPropertyChanging();
				this._Fan_Size = value;
				this.SendPropertyChanged("Fan_Size");
				this.OnFan_SizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fan_RPM", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Fan_RPM
	{
		get
		{
			return this._Fan_RPM;
		}
		set
		{
			if ((this._Fan_RPM != value))
			{
				this.OnFan_RPMChanging(value);
				this.SendPropertyChanging();
				this._Fan_RPM = value;
				this.SendPropertyChanged("Fan_RPM");
				this.OnFan_RPMChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fan_PWM_Control", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Fan_PWM_Control
	{
		get
		{
			return this._Fan_PWM_Control;
		}
		set
		{
			if ((this._Fan_PWM_Control != value))
			{
				this.OnFan_PWM_ControlChanging(value);
				this.SendPropertyChanging();
				this._Fan_PWM_Control = value;
				this.SendPropertyChanged("Fan_PWM_Control");
				this.OnFan_PWM_ControlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fan_Noise", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Fan_Noise
	{
		get
		{
			return this._Fan_Noise;
		}
		set
		{
			if ((this._Fan_Noise != value))
			{
				this.OnFan_NoiseChanging(value);
				this.SendPropertyChanging();
				this._Fan_Noise = value;
				this.SendPropertyChanged("Fan_Noise");
				this.OnFan_NoiseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fan_Max_Air_Flow", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Fan_Max_Air_Flow
	{
		get
		{
			return this._Fan_Max_Air_Flow;
		}
		set
		{
			if ((this._Fan_Max_Air_Flow != value))
			{
				this.OnFan_Max_Air_FlowChanging(value);
				this.SendPropertyChanging();
				this._Fan_Max_Air_Flow = value;
				this.SendPropertyChanged("Fan_Max_Air_Flow");
				this.OnFan_Max_Air_FlowChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fan_Max_Static_Pressure", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Fan_Max_Static_Pressure
	{
		get
		{
			return this._Fan_Max_Static_Pressure;
		}
		set
		{
			if ((this._Fan_Max_Static_Pressure != value))
			{
				this.OnFan_Max_Static_PressureChanging(value);
				this.SendPropertyChanging();
				this._Fan_Max_Static_Pressure = value;
				this.SendPropertyChanged("Fan_Max_Static_Pressure");
				this.OnFan_Max_Static_PressureChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fan_Input_Voltage", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Fan_Input_Voltage
	{
		get
		{
			return this._Fan_Input_Voltage;
		}
		set
		{
			if ((this._Fan_Input_Voltage != value))
			{
				this.OnFan_Input_VoltageChanging(value);
				this.SendPropertyChanging();
				this._Fan_Input_Voltage = value;
				this.SendPropertyChanged("Fan_Input_Voltage");
				this.OnFan_Input_VoltageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fan_MTBF", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Fan_MTBF
	{
		get
		{
			return this._Fan_MTBF;
		}
		set
		{
			if ((this._Fan_MTBF != value))
			{
				this.OnFan_MTBFChanging(value);
				this.SendPropertyChanging();
				this._Fan_MTBF = value;
				this.SendPropertyChanged("Fan_MTBF");
				this.OnFan_MTBFChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pump_RPM", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Pump_RPM
	{
		get
		{
			return this._Pump_RPM;
		}
		set
		{
			if ((this._Pump_RPM != value))
			{
				this.OnPump_RPMChanging(value);
				this.SendPropertyChanging();
				this._Pump_RPM = value;
				this.SendPropertyChanged("Pump_RPM");
				this.OnPump_RPMChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pump_PWM_Control", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Pump_PWM_Control
	{
		get
		{
			return this._Pump_PWM_Control;
		}
		set
		{
			if ((this._Pump_PWM_Control != value))
			{
				this.OnPump_PWM_ControlChanging(value);
				this.SendPropertyChanging();
				this._Pump_PWM_Control = value;
				this.SendPropertyChanged("Pump_PWM_Control");
				this.OnPump_PWM_ControlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pump_Max_Pressure", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Pump_Max_Pressure
	{
		get
		{
			return this._Pump_Max_Pressure;
		}
		set
		{
			if ((this._Pump_Max_Pressure != value))
			{
				this.OnPump_Max_PressureChanging(value);
				this.SendPropertyChanging();
				this._Pump_Max_Pressure = value;
				this.SendPropertyChanged("Pump_Max_Pressure");
				this.OnPump_Max_PressureChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pump_Rated_Input_Power", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Pump_Rated_Input_Power
	{
		get
		{
			return this._Pump_Rated_Input_Power;
		}
		set
		{
			if ((this._Pump_Rated_Input_Power != value))
			{
				this.OnPump_Rated_Input_PowerChanging(value);
				this.SendPropertyChanging();
				this._Pump_Rated_Input_Power = value;
				this.SendPropertyChanged("Pump_Rated_Input_Power");
				this.OnPump_Rated_Input_PowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pump_MTBF", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Pump_MTBF
	{
		get
		{
			return this._Pump_MTBF;
		}
		set
		{
			if ((this._Pump_MTBF != value))
			{
				this.OnPump_MTBFChanging(value);
				this.SendPropertyChanging();
				this._Pump_MTBF = value;
				this.SendPropertyChanged("Pump_MTBF");
				this.OnPump_MTBFChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radiator_Housing_Mats", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Radiator_Housing_Mats
	{
		get
		{
			return this._Radiator_Housing_Mats;
		}
		set
		{
			if ((this._Radiator_Housing_Mats != value))
			{
				this.OnRadiator_Housing_MatsChanging(value);
				this.SendPropertyChanging();
				this._Radiator_Housing_Mats = value;
				this.SendPropertyChanged("Radiator_Housing_Mats");
				this.OnRadiator_Housing_MatsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radiator_Fin_Mats", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Radiator_Fin_Mats
	{
		get
		{
			return this._Radiator_Fin_Mats;
		}
		set
		{
			if ((this._Radiator_Fin_Mats != value))
			{
				this.OnRadiator_Fin_MatsChanging(value);
				this.SendPropertyChanging();
				this._Radiator_Fin_Mats = value;
				this.SendPropertyChanged("Radiator_Fin_Mats");
				this.OnRadiator_Fin_MatsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fan_Screw_Threads", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Fan_Screw_Threads
	{
		get
		{
			return this._Fan_Screw_Threads;
		}
		set
		{
			if ((this._Fan_Screw_Threads != value))
			{
				this.OnFan_Screw_ThreadsChanging(value);
				this.SendPropertyChanging();
				this._Fan_Screw_Threads = value;
				this.SendPropertyChanged("Fan_Screw_Threads");
				this.OnFan_Screw_ThreadsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radiator_Dimensions", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Radiator_Dimensions
	{
		get
		{
			return this._Radiator_Dimensions;
		}
		set
		{
			if ((this._Radiator_Dimensions != value))
			{
				this.OnRadiator_DimensionsChanging(value);
				this.SendPropertyChanging();
				this._Radiator_Dimensions = value;
				this.SendPropertyChanged("Radiator_Dimensions");
				this.OnRadiator_DimensionsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Coldplate_Material", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Coldplate_Material
	{
		get
		{
			return this._Coldplate_Material;
		}
		set
		{
			if ((this._Coldplate_Material != value))
			{
				this.OnColdplate_MaterialChanging(value);
				this.SendPropertyChanging();
				this._Coldplate_Material = value;
				this.SendPropertyChanged("Coldplate_Material");
				this.OnColdplate_MaterialChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thermal_Paste", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Thermal_Paste
	{
		get
		{
			return this._Thermal_Paste;
		}
		set
		{
			if ((this._Thermal_Paste != value))
			{
				this.OnThermal_PasteChanging(value);
				this.SendPropertyChanging();
				this._Thermal_Paste = value;
				this.SendPropertyChanged("Thermal_Paste");
				this.OnThermal_PasteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fittings", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Fittings
	{
		get
		{
			return this._Fittings;
		}
		set
		{
			if ((this._Fittings != value))
			{
				this.OnFittingsChanging(value);
				this.SendPropertyChanging();
				this._Fittings = value;
				this.SendPropertyChanged("Fittings");
				this.OnFittingsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tube_Length", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Tube_Length
	{
		get
		{
			return this._Tube_Length;
		}
		set
		{
			if ((this._Tube_Length != value))
			{
				this.OnTube_LengthChanging(value);
				this.SendPropertyChanging();
				this._Tube_Length = value;
				this.SendPropertyChanged("Tube_Length");
				this.OnTube_LengthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tube_Mats", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Tube_Mats
	{
		get
		{
			return this._Tube_Mats;
		}
		set
		{
			if ((this._Tube_Mats != value))
			{
				this.OnTube_MatsChanging(value);
				this.SendPropertyChanging();
				this._Tube_Mats = value;
				this.SendPropertyChanged("Tube_Mats");
				this.OnTube_MatsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sockets_Supported", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Sockets_Supported
	{
		get
		{
			return this._Sockets_Supported;
		}
		set
		{
			if ((this._Sockets_Supported != value))
			{
				this.OnSockets_SupportedChanging(value);
				this.SendPropertyChanging();
				this._Sockets_Supported = value;
				this.SendPropertyChanged("Sockets_Supported");
				this.OnSockets_SupportedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGB", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string RGB
	{
		get
		{
			return this._RGB;
		}
		set
		{
			if ((this._RGB != value))
			{
				this.OnRGBChanging(value);
				this.SendPropertyChanging();
				this._RGB = value;
				this.SendPropertyChanged("RGB");
				this.OnRGBChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Package_Contents", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Package_Contents
	{
		get
		{
			return this._Package_Contents;
		}
		set
		{
			if ((this._Package_Contents != value))
			{
				this.OnPackage_ContentsChanging(value);
				this.SendPropertyChanging();
				this._Package_Contents = value;
				this.SendPropertyChanged("Package_Contents");
				this.OnPackage_ContentsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warranty", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Warranty
	{
		get
		{
			return this._Warranty;
		}
		set
		{
			if ((this._Warranty != value))
			{
				this.OnWarrantyChanging(value);
				this.SendPropertyChanging();
				this._Warranty = value;
				this.SendPropertyChanged("Warranty");
				this.OnWarrantyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LiquidCooler_CpuToLiquidCooler", Storage="_CpuToLiquidCoolers", ThisKey="Model", OtherKey="Liquid_Cooler_Model")]
	public EntitySet<CpuToLiquidCooler> CpuToLiquidCoolers
	{
		get
		{
			return this._CpuToLiquidCoolers;
		}
		set
		{
			this._CpuToLiquidCoolers.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CpuToLiquidCoolers(CpuToLiquidCooler entity)
	{
		this.SendPropertyChanging();
		entity.LiquidCooler = this;
	}
	
	private void detach_CpuToLiquidCoolers(CpuToLiquidCooler entity)
	{
		this.SendPropertyChanging();
		entity.LiquidCooler = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoginTable")]
public partial class LoginTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _User_ID;
	
	private string _User_Name;
	
	private string _Password;
	
	private int _User_Type;
	
	private EntityRef<Admin> _Admin;
	
	private EntityRef<Client> _Client;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnUser_NameChanging(string value);
    partial void OnUser_NameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUser_TypeChanging(int value);
    partial void OnUser_TypeChanged();
    #endregion
	
	public LoginTable()
	{
		this._Admin = default(EntityRef<Admin>);
		this._Client = default(EntityRef<Client>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int User_ID
	{
		get
		{
			return this._User_ID;
		}
		set
		{
			if ((this._User_ID != value))
			{
				this.OnUser_IDChanging(value);
				this.SendPropertyChanging();
				this._User_ID = value;
				this.SendPropertyChanged("User_ID");
				this.OnUser_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string User_Name
	{
		get
		{
			return this._User_Name;
		}
		set
		{
			if ((this._User_Name != value))
			{
				this.OnUser_NameChanging(value);
				this.SendPropertyChanging();
				this._User_Name = value;
				this.SendPropertyChanged("User_Name");
				this.OnUser_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Type", DbType="Int NOT NULL")]
	public int User_Type
	{
		get
		{
			return this._User_Type;
		}
		set
		{
			if ((this._User_Type != value))
			{
				this.OnUser_TypeChanging(value);
				this.SendPropertyChanging();
				this._User_Type = value;
				this.SendPropertyChanged("User_Type");
				this.OnUser_TypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoginTable_Admin", Storage="_Admin", ThisKey="User_ID", OtherKey="Admin_ID", IsUnique=true, IsForeignKey=false)]
	public Admin Admin
	{
		get
		{
			return this._Admin.Entity;
		}
		set
		{
			Admin previousValue = this._Admin.Entity;
			if (((previousValue != value) 
						|| (this._Admin.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Admin.Entity = null;
					previousValue.LoginTable = null;
				}
				this._Admin.Entity = value;
				if ((value != null))
				{
					value.LoginTable = this;
				}
				this.SendPropertyChanged("Admin");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoginTable_Client", Storage="_Client", ThisKey="User_ID", OtherKey="User_ID", IsUnique=true, IsForeignKey=false)]
	public Client Client
	{
		get
		{
			return this._Client.Entity;
		}
		set
		{
			Client previousValue = this._Client.Entity;
			if (((previousValue != value) 
						|| (this._Client.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Client.Entity = null;
					previousValue.LoginTable = null;
				}
				this._Client.Entity = value;
				if ((value != null))
				{
					value.LoginTable = this;
				}
				this.SendPropertyChanged("Client");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Microphone")]
public partial class Microphone : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Model;
	
	private string _Brand;
	
	private string _Series;
	
	private string _Pick_Up_Pattern;
	
	private string _Frequency_Response;
	
	private string _Sensitivity;
	
	private string _Cable_Length;
	
	private string _Warranty;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnSeriesChanging(string value);
    partial void OnSeriesChanged();
    partial void OnPick_Up_PatternChanging(string value);
    partial void OnPick_Up_PatternChanged();
    partial void OnFrequency_ResponseChanging(string value);
    partial void OnFrequency_ResponseChanged();
    partial void OnSensitivityChanging(string value);
    partial void OnSensitivityChanged();
    partial void OnCable_LengthChanging(string value);
    partial void OnCable_LengthChanged();
    partial void OnWarrantyChanging(string value);
    partial void OnWarrantyChanged();
    #endregion
	
	public Microphone()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this.OnBrandChanging(value);
				this.SendPropertyChanging();
				this._Brand = value;
				this.SendPropertyChanged("Brand");
				this.OnBrandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Series", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Series
	{
		get
		{
			return this._Series;
		}
		set
		{
			if ((this._Series != value))
			{
				this.OnSeriesChanging(value);
				this.SendPropertyChanging();
				this._Series = value;
				this.SendPropertyChanged("Series");
				this.OnSeriesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pick_Up_Pattern", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Pick_Up_Pattern
	{
		get
		{
			return this._Pick_Up_Pattern;
		}
		set
		{
			if ((this._Pick_Up_Pattern != value))
			{
				this.OnPick_Up_PatternChanging(value);
				this.SendPropertyChanging();
				this._Pick_Up_Pattern = value;
				this.SendPropertyChanged("Pick_Up_Pattern");
				this.OnPick_Up_PatternChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency_Response", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Frequency_Response
	{
		get
		{
			return this._Frequency_Response;
		}
		set
		{
			if ((this._Frequency_Response != value))
			{
				this.OnFrequency_ResponseChanging(value);
				this.SendPropertyChanging();
				this._Frequency_Response = value;
				this.SendPropertyChanged("Frequency_Response");
				this.OnFrequency_ResponseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sensitivity", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Sensitivity
	{
		get
		{
			return this._Sensitivity;
		}
		set
		{
			if ((this._Sensitivity != value))
			{
				this.OnSensitivityChanging(value);
				this.SendPropertyChanging();
				this._Sensitivity = value;
				this.SendPropertyChanged("Sensitivity");
				this.OnSensitivityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cable_Length", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Cable_Length
	{
		get
		{
			return this._Cable_Length;
		}
		set
		{
			if ((this._Cable_Length != value))
			{
				this.OnCable_LengthChanging(value);
				this.SendPropertyChanging();
				this._Cable_Length = value;
				this.SendPropertyChanged("Cable_Length");
				this.OnCable_LengthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warranty", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Warranty
	{
		get
		{
			return this._Warranty;
		}
		set
		{
			if ((this._Warranty != value))
			{
				this.OnWarrantyChanging(value);
				this.SendPropertyChanging();
				this._Warranty = value;
				this.SendPropertyChanged("Warranty");
				this.OnWarrantyChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MoboToCPU")]
public partial class MoboToCPU : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Mobo_Model;
	
	private string _CPU_Model;
	
	private string _CPU_Chipset;
	
	private EntityRef<CPU> _CPU;
	
	private EntityRef<Motherboard> _Motherboard;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMobo_ModelChanging(string value);
    partial void OnMobo_ModelChanged();
    partial void OnCPU_ModelChanging(string value);
    partial void OnCPU_ModelChanged();
    partial void OnCPU_ChipsetChanging(string value);
    partial void OnCPU_ChipsetChanged();
    #endregion
	
	public MoboToCPU()
	{
		this._CPU = default(EntityRef<CPU>);
		this._Motherboard = default(EntityRef<Motherboard>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobo_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Mobo_Model
	{
		get
		{
			return this._Mobo_Model;
		}
		set
		{
			if ((this._Mobo_Model != value))
			{
				if (this._Motherboard.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMobo_ModelChanging(value);
				this.SendPropertyChanging();
				this._Mobo_Model = value;
				this.SendPropertyChanged("Mobo_Model");
				this.OnMobo_ModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPU_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string CPU_Model
	{
		get
		{
			return this._CPU_Model;
		}
		set
		{
			if ((this._CPU_Model != value))
			{
				if (this._CPU.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCPU_ModelChanging(value);
				this.SendPropertyChanging();
				this._CPU_Model = value;
				this.SendPropertyChanged("CPU_Model");
				this.OnCPU_ModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPU_Chipset", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string CPU_Chipset
	{
		get
		{
			return this._CPU_Chipset;
		}
		set
		{
			if ((this._CPU_Chipset != value))
			{
				this.OnCPU_ChipsetChanging(value);
				this.SendPropertyChanging();
				this._CPU_Chipset = value;
				this.SendPropertyChanged("CPU_Chipset");
				this.OnCPU_ChipsetChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CPU_MoboToCPU", Storage="_CPU", ThisKey="CPU_Model", OtherKey="Model", IsForeignKey=true)]
	public CPU CPU
	{
		get
		{
			return this._CPU.Entity;
		}
		set
		{
			CPU previousValue = this._CPU.Entity;
			if (((previousValue != value) 
						|| (this._CPU.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CPU.Entity = null;
					previousValue.MoboToCPUs.Remove(this);
				}
				this._CPU.Entity = value;
				if ((value != null))
				{
					value.MoboToCPUs.Add(this);
					this._CPU_Model = value.Model;
				}
				else
				{
					this._CPU_Model = default(string);
				}
				this.SendPropertyChanged("CPU");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Motherboard_MoboToCPU", Storage="_Motherboard", ThisKey="Mobo_Model", OtherKey="Model", IsForeignKey=true)]
	public Motherboard Motherboard
	{
		get
		{
			return this._Motherboard.Entity;
		}
		set
		{
			Motherboard previousValue = this._Motherboard.Entity;
			if (((previousValue != value) 
						|| (this._Motherboard.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Motherboard.Entity = null;
					previousValue.MoboToCPUs.Remove(this);
				}
				this._Motherboard.Entity = value;
				if ((value != null))
				{
					value.MoboToCPUs.Add(this);
					this._Mobo_Model = value.Model;
				}
				else
				{
					this._Mobo_Model = default(string);
				}
				this.SendPropertyChanged("Motherboard");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MoboToRAM")]
public partial class MoboToRAM : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Mobo_Model;
	
	private string _RAM_Model;
	
	private EntityRef<Motherboard> _Motherboard;
	
	private EntityRef<RAM> _RAM;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMobo_ModelChanging(string value);
    partial void OnMobo_ModelChanged();
    partial void OnRAM_ModelChanging(string value);
    partial void OnRAM_ModelChanged();
    #endregion
	
	public MoboToRAM()
	{
		this._Motherboard = default(EntityRef<Motherboard>);
		this._RAM = default(EntityRef<RAM>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobo_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Mobo_Model
	{
		get
		{
			return this._Mobo_Model;
		}
		set
		{
			if ((this._Mobo_Model != value))
			{
				if (this._Motherboard.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMobo_ModelChanging(value);
				this.SendPropertyChanging();
				this._Mobo_Model = value;
				this.SendPropertyChanged("Mobo_Model");
				this.OnMobo_ModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RAM_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string RAM_Model
	{
		get
		{
			return this._RAM_Model;
		}
		set
		{
			if ((this._RAM_Model != value))
			{
				if (this._RAM.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRAM_ModelChanging(value);
				this.SendPropertyChanging();
				this._RAM_Model = value;
				this.SendPropertyChanged("RAM_Model");
				this.OnRAM_ModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Motherboard_MoboToRAM", Storage="_Motherboard", ThisKey="Mobo_Model", OtherKey="Model", IsForeignKey=true)]
	public Motherboard Motherboard
	{
		get
		{
			return this._Motherboard.Entity;
		}
		set
		{
			Motherboard previousValue = this._Motherboard.Entity;
			if (((previousValue != value) 
						|| (this._Motherboard.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Motherboard.Entity = null;
					previousValue.MoboToRAMs.Remove(this);
				}
				this._Motherboard.Entity = value;
				if ((value != null))
				{
					value.MoboToRAMs.Add(this);
					this._Mobo_Model = value.Model;
				}
				else
				{
					this._Mobo_Model = default(string);
				}
				this.SendPropertyChanged("Motherboard");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RAM_MoboToRAM", Storage="_RAM", ThisKey="RAM_Model", OtherKey="Model", IsForeignKey=true)]
	public RAM RAM
	{
		get
		{
			return this._RAM.Entity;
		}
		set
		{
			RAM previousValue = this._RAM.Entity;
			if (((previousValue != value) 
						|| (this._RAM.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._RAM.Entity = null;
					previousValue.MoboToRAMs.Remove(this);
				}
				this._RAM.Entity = value;
				if ((value != null))
				{
					value.MoboToRAMs.Add(this);
					this._RAM_Model = value.Model;
				}
				else
				{
					this._RAM_Model = default(string);
				}
				this.SendPropertyChanged("RAM");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Monitor")]
public partial class Monitor : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Model;
	
	private string _Brand;
	
	private string _Series;
	
	private string _ScreenSize;
	
	private string _ScreenRatio;
	
	private string _Brightness;
	
	private string _ContrastRatio;
	
	private string _DynamicContrastRatio;
	
	private string _ViewingAngle;
	
	private string _ResponseTime;
	
	private string _Panel_Type;
	
	private string _RefreshRate;
	
	private string _Resolution;
	
	private string _Colours;
	
	private string _DisplayPortInput;
	
	private string _HDMI;
	
	private string _VGA;
	
	private string _Speakers;
	
	private string _PowerSource;
	
	private string _PowerSupply;
	
	private string _EnergyClass;
	
	private string _Swivel;
	
	private string _Tilt;
	
	private string _Pivot;
	
	private string _Regulations;
	
	private string _Warranty;
	
	private EntitySet<GpuToMonitor> _GpuToMonitors;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnSeriesChanging(string value);
    partial void OnSeriesChanged();
    partial void OnScreenSizeChanging(string value);
    partial void OnScreenSizeChanged();
    partial void OnScreenRatioChanging(string value);
    partial void OnScreenRatioChanged();
    partial void OnBrightnessChanging(string value);
    partial void OnBrightnessChanged();
    partial void OnContrastRatioChanging(string value);
    partial void OnContrastRatioChanged();
    partial void OnDynamicContrastRatioChanging(string value);
    partial void OnDynamicContrastRatioChanged();
    partial void OnViewingAngleChanging(string value);
    partial void OnViewingAngleChanged();
    partial void OnResponseTimeChanging(string value);
    partial void OnResponseTimeChanged();
    partial void OnPanel_TypeChanging(string value);
    partial void OnPanel_TypeChanged();
    partial void OnRefreshRateChanging(string value);
    partial void OnRefreshRateChanged();
    partial void OnResolutionChanging(string value);
    partial void OnResolutionChanged();
    partial void OnColoursChanging(string value);
    partial void OnColoursChanged();
    partial void OnDisplayPortInputChanging(string value);
    partial void OnDisplayPortInputChanged();
    partial void OnHDMIChanging(string value);
    partial void OnHDMIChanged();
    partial void OnVGAChanging(string value);
    partial void OnVGAChanged();
    partial void OnSpeakersChanging(string value);
    partial void OnSpeakersChanged();
    partial void OnPowerSourceChanging(string value);
    partial void OnPowerSourceChanged();
    partial void OnPowerSupplyChanging(string value);
    partial void OnPowerSupplyChanged();
    partial void OnEnergyClassChanging(string value);
    partial void OnEnergyClassChanged();
    partial void OnSwivelChanging(string value);
    partial void OnSwivelChanged();
    partial void OnTiltChanging(string value);
    partial void OnTiltChanged();
    partial void OnPivotChanging(string value);
    partial void OnPivotChanged();
    partial void OnRegulationsChanging(string value);
    partial void OnRegulationsChanged();
    partial void OnWarrantyChanging(string value);
    partial void OnWarrantyChanged();
    #endregion
	
	public Monitor()
	{
		this._GpuToMonitors = new EntitySet<GpuToMonitor>(new Action<GpuToMonitor>(this.attach_GpuToMonitors), new Action<GpuToMonitor>(this.detach_GpuToMonitors));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this.OnBrandChanging(value);
				this.SendPropertyChanging();
				this._Brand = value;
				this.SendPropertyChanged("Brand");
				this.OnBrandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Series", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Series
	{
		get
		{
			return this._Series;
		}
		set
		{
			if ((this._Series != value))
			{
				this.OnSeriesChanging(value);
				this.SendPropertyChanging();
				this._Series = value;
				this.SendPropertyChanged("Series");
				this.OnSeriesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenSize", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string ScreenSize
	{
		get
		{
			return this._ScreenSize;
		}
		set
		{
			if ((this._ScreenSize != value))
			{
				this.OnScreenSizeChanging(value);
				this.SendPropertyChanging();
				this._ScreenSize = value;
				this.SendPropertyChanged("ScreenSize");
				this.OnScreenSizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenRatio", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string ScreenRatio
	{
		get
		{
			return this._ScreenRatio;
		}
		set
		{
			if ((this._ScreenRatio != value))
			{
				this.OnScreenRatioChanging(value);
				this.SendPropertyChanging();
				this._ScreenRatio = value;
				this.SendPropertyChanged("ScreenRatio");
				this.OnScreenRatioChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brightness", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Brightness
	{
		get
		{
			return this._Brightness;
		}
		set
		{
			if ((this._Brightness != value))
			{
				this.OnBrightnessChanging(value);
				this.SendPropertyChanging();
				this._Brightness = value;
				this.SendPropertyChanged("Brightness");
				this.OnBrightnessChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContrastRatio", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string ContrastRatio
	{
		get
		{
			return this._ContrastRatio;
		}
		set
		{
			if ((this._ContrastRatio != value))
			{
				this.OnContrastRatioChanging(value);
				this.SendPropertyChanging();
				this._ContrastRatio = value;
				this.SendPropertyChanged("ContrastRatio");
				this.OnContrastRatioChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DynamicContrastRatio", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string DynamicContrastRatio
	{
		get
		{
			return this._DynamicContrastRatio;
		}
		set
		{
			if ((this._DynamicContrastRatio != value))
			{
				this.OnDynamicContrastRatioChanging(value);
				this.SendPropertyChanging();
				this._DynamicContrastRatio = value;
				this.SendPropertyChanged("DynamicContrastRatio");
				this.OnDynamicContrastRatioChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewingAngle", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string ViewingAngle
	{
		get
		{
			return this._ViewingAngle;
		}
		set
		{
			if ((this._ViewingAngle != value))
			{
				this.OnViewingAngleChanging(value);
				this.SendPropertyChanging();
				this._ViewingAngle = value;
				this.SendPropertyChanged("ViewingAngle");
				this.OnViewingAngleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseTime", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string ResponseTime
	{
		get
		{
			return this._ResponseTime;
		}
		set
		{
			if ((this._ResponseTime != value))
			{
				this.OnResponseTimeChanging(value);
				this.SendPropertyChanging();
				this._ResponseTime = value;
				this.SendPropertyChanged("ResponseTime");
				this.OnResponseTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Panel Type]", Storage="_Panel_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Panel_Type
	{
		get
		{
			return this._Panel_Type;
		}
		set
		{
			if ((this._Panel_Type != value))
			{
				this.OnPanel_TypeChanging(value);
				this.SendPropertyChanging();
				this._Panel_Type = value;
				this.SendPropertyChanged("Panel_Type");
				this.OnPanel_TypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefreshRate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string RefreshRate
	{
		get
		{
			return this._RefreshRate;
		}
		set
		{
			if ((this._RefreshRate != value))
			{
				this.OnRefreshRateChanging(value);
				this.SendPropertyChanging();
				this._RefreshRate = value;
				this.SendPropertyChanged("RefreshRate");
				this.OnRefreshRateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resolution", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Resolution
	{
		get
		{
			return this._Resolution;
		}
		set
		{
			if ((this._Resolution != value))
			{
				this.OnResolutionChanging(value);
				this.SendPropertyChanging();
				this._Resolution = value;
				this.SendPropertyChanged("Resolution");
				this.OnResolutionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Colours", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Colours
	{
		get
		{
			return this._Colours;
		}
		set
		{
			if ((this._Colours != value))
			{
				this.OnColoursChanging(value);
				this.SendPropertyChanging();
				this._Colours = value;
				this.SendPropertyChanged("Colours");
				this.OnColoursChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayPortInput", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string DisplayPortInput
	{
		get
		{
			return this._DisplayPortInput;
		}
		set
		{
			if ((this._DisplayPortInput != value))
			{
				this.OnDisplayPortInputChanging(value);
				this.SendPropertyChanging();
				this._DisplayPortInput = value;
				this.SendPropertyChanged("DisplayPortInput");
				this.OnDisplayPortInputChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HDMI", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string HDMI
	{
		get
		{
			return this._HDMI;
		}
		set
		{
			if ((this._HDMI != value))
			{
				this.OnHDMIChanging(value);
				this.SendPropertyChanging();
				this._HDMI = value;
				this.SendPropertyChanged("HDMI");
				this.OnHDMIChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VGA", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string VGA
	{
		get
		{
			return this._VGA;
		}
		set
		{
			if ((this._VGA != value))
			{
				this.OnVGAChanging(value);
				this.SendPropertyChanging();
				this._VGA = value;
				this.SendPropertyChanged("VGA");
				this.OnVGAChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Speakers", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Speakers
	{
		get
		{
			return this._Speakers;
		}
		set
		{
			if ((this._Speakers != value))
			{
				this.OnSpeakersChanging(value);
				this.SendPropertyChanging();
				this._Speakers = value;
				this.SendPropertyChanged("Speakers");
				this.OnSpeakersChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerSource", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string PowerSource
	{
		get
		{
			return this._PowerSource;
		}
		set
		{
			if ((this._PowerSource != value))
			{
				this.OnPowerSourceChanging(value);
				this.SendPropertyChanging();
				this._PowerSource = value;
				this.SendPropertyChanged("PowerSource");
				this.OnPowerSourceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerSupply", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string PowerSupply
	{
		get
		{
			return this._PowerSupply;
		}
		set
		{
			if ((this._PowerSupply != value))
			{
				this.OnPowerSupplyChanging(value);
				this.SendPropertyChanging();
				this._PowerSupply = value;
				this.SendPropertyChanged("PowerSupply");
				this.OnPowerSupplyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnergyClass", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string EnergyClass
	{
		get
		{
			return this._EnergyClass;
		}
		set
		{
			if ((this._EnergyClass != value))
			{
				this.OnEnergyClassChanging(value);
				this.SendPropertyChanging();
				this._EnergyClass = value;
				this.SendPropertyChanged("EnergyClass");
				this.OnEnergyClassChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Swivel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Swivel
	{
		get
		{
			return this._Swivel;
		}
		set
		{
			if ((this._Swivel != value))
			{
				this.OnSwivelChanging(value);
				this.SendPropertyChanging();
				this._Swivel = value;
				this.SendPropertyChanged("Swivel");
				this.OnSwivelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tilt", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Tilt
	{
		get
		{
			return this._Tilt;
		}
		set
		{
			if ((this._Tilt != value))
			{
				this.OnTiltChanging(value);
				this.SendPropertyChanging();
				this._Tilt = value;
				this.SendPropertyChanged("Tilt");
				this.OnTiltChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Pivot]", Storage="_Pivot", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Pivot
	{
		get
		{
			return this._Pivot;
		}
		set
		{
			if ((this._Pivot != value))
			{
				this.OnPivotChanging(value);
				this.SendPropertyChanging();
				this._Pivot = value;
				this.SendPropertyChanged("Pivot");
				this.OnPivotChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Regulations", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Regulations
	{
		get
		{
			return this._Regulations;
		}
		set
		{
			if ((this._Regulations != value))
			{
				this.OnRegulationsChanging(value);
				this.SendPropertyChanging();
				this._Regulations = value;
				this.SendPropertyChanged("Regulations");
				this.OnRegulationsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warranty", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Warranty
	{
		get
		{
			return this._Warranty;
		}
		set
		{
			if ((this._Warranty != value))
			{
				this.OnWarrantyChanging(value);
				this.SendPropertyChanging();
				this._Warranty = value;
				this.SendPropertyChanged("Warranty");
				this.OnWarrantyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Monitor_GpuToMonitor", Storage="_GpuToMonitors", ThisKey="Model", OtherKey="Monitor_Model")]
	public EntitySet<GpuToMonitor> GpuToMonitors
	{
		get
		{
			return this._GpuToMonitors;
		}
		set
		{
			this._GpuToMonitors.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_GpuToMonitors(GpuToMonitor entity)
	{
		this.SendPropertyChanging();
		entity.Monitor = this;
	}
	
	private void detach_GpuToMonitors(GpuToMonitor entity)
	{
		this.SendPropertyChanging();
		entity.Monitor = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Motherboard")]
public partial class Motherboard : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Model;
	
	private string _Brand;
	
	private string _Series;
	
	private string _Chipset;
	
	private string _Memory_Type;
	
	private int _Max_Memory_Size;
	
	private int _Max_Memory_Speed;
	
	private string _Audio;
	
	private string _LAN;
	
	private string _Expansion_Slots;
	
	private string _Storage_Interface;
	
	private string _Multi_GPU_Tech;
	
	private string _USB;
	
	private string _Internal_I_O_Connectors;
	
	private string _Back_Panel_Connectors;
	
	private string _I_O_Controller;
	
	private string _BIOS;
	
	private string _OS_Support;
	
	private string _Form_Factor;
	
	private string _Notes;
	
	private string _Warranty;
	
	private EntitySet<CaseToMobo> _CaseToMobos;
	
	private EntitySet<MoboToCPU> _MoboToCPUs;
	
	private EntitySet<MoboToRAM> _MoboToRAMs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnSeriesChanging(string value);
    partial void OnSeriesChanged();
    partial void OnChipsetChanging(string value);
    partial void OnChipsetChanged();
    partial void OnMemory_TypeChanging(string value);
    partial void OnMemory_TypeChanged();
    partial void OnMax_Memory_SizeChanging(int value);
    partial void OnMax_Memory_SizeChanged();
    partial void OnMax_Memory_SpeedChanging(int value);
    partial void OnMax_Memory_SpeedChanged();
    partial void OnAudioChanging(string value);
    partial void OnAudioChanged();
    partial void OnLANChanging(string value);
    partial void OnLANChanged();
    partial void OnExpansion_SlotsChanging(string value);
    partial void OnExpansion_SlotsChanged();
    partial void OnStorage_InterfaceChanging(string value);
    partial void OnStorage_InterfaceChanged();
    partial void OnMulti_GPU_TechChanging(string value);
    partial void OnMulti_GPU_TechChanged();
    partial void OnUSBChanging(string value);
    partial void OnUSBChanged();
    partial void OnInternal_I_O_ConnectorsChanging(string value);
    partial void OnInternal_I_O_ConnectorsChanged();
    partial void OnBack_Panel_ConnectorsChanging(string value);
    partial void OnBack_Panel_ConnectorsChanged();
    partial void OnI_O_ControllerChanging(string value);
    partial void OnI_O_ControllerChanged();
    partial void OnBIOSChanging(string value);
    partial void OnBIOSChanged();
    partial void OnOS_SupportChanging(string value);
    partial void OnOS_SupportChanged();
    partial void OnForm_FactorChanging(string value);
    partial void OnForm_FactorChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnWarrantyChanging(string value);
    partial void OnWarrantyChanged();
    #endregion
	
	public Motherboard()
	{
		this._CaseToMobos = new EntitySet<CaseToMobo>(new Action<CaseToMobo>(this.attach_CaseToMobos), new Action<CaseToMobo>(this.detach_CaseToMobos));
		this._MoboToCPUs = new EntitySet<MoboToCPU>(new Action<MoboToCPU>(this.attach_MoboToCPUs), new Action<MoboToCPU>(this.detach_MoboToCPUs));
		this._MoboToRAMs = new EntitySet<MoboToRAM>(new Action<MoboToRAM>(this.attach_MoboToRAMs), new Action<MoboToRAM>(this.detach_MoboToRAMs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="NChar(50) NOT NULL", CanBeNull=false)]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this.OnBrandChanging(value);
				this.SendPropertyChanging();
				this._Brand = value;
				this.SendPropertyChanged("Brand");
				this.OnBrandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Series", DbType="NChar(50) NOT NULL", CanBeNull=false)]
	public string Series
	{
		get
		{
			return this._Series;
		}
		set
		{
			if ((this._Series != value))
			{
				this.OnSeriesChanging(value);
				this.SendPropertyChanging();
				this._Series = value;
				this.SendPropertyChanged("Series");
				this.OnSeriesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chipset", DbType="NChar(20) NOT NULL", CanBeNull=false)]
	public string Chipset
	{
		get
		{
			return this._Chipset;
		}
		set
		{
			if ((this._Chipset != value))
			{
				this.OnChipsetChanging(value);
				this.SendPropertyChanging();
				this._Chipset = value;
				this.SendPropertyChanged("Chipset");
				this.OnChipsetChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memory_Type", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Memory_Type
	{
		get
		{
			return this._Memory_Type;
		}
		set
		{
			if ((this._Memory_Type != value))
			{
				this.OnMemory_TypeChanging(value);
				this.SendPropertyChanging();
				this._Memory_Type = value;
				this.SendPropertyChanged("Memory_Type");
				this.OnMemory_TypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Max_Memory_Size", DbType="Int NOT NULL")]
	public int Max_Memory_Size
	{
		get
		{
			return this._Max_Memory_Size;
		}
		set
		{
			if ((this._Max_Memory_Size != value))
			{
				this.OnMax_Memory_SizeChanging(value);
				this.SendPropertyChanging();
				this._Max_Memory_Size = value;
				this.SendPropertyChanged("Max_Memory_Size");
				this.OnMax_Memory_SizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Max_Memory_Speed", DbType="Int NOT NULL")]
	public int Max_Memory_Speed
	{
		get
		{
			return this._Max_Memory_Speed;
		}
		set
		{
			if ((this._Max_Memory_Speed != value))
			{
				this.OnMax_Memory_SpeedChanging(value);
				this.SendPropertyChanging();
				this._Max_Memory_Speed = value;
				this.SendPropertyChanged("Max_Memory_Speed");
				this.OnMax_Memory_SpeedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Audio", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Audio
	{
		get
		{
			return this._Audio;
		}
		set
		{
			if ((this._Audio != value))
			{
				this.OnAudioChanging(value);
				this.SendPropertyChanging();
				this._Audio = value;
				this.SendPropertyChanged("Audio");
				this.OnAudioChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAN", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string LAN
	{
		get
		{
			return this._LAN;
		}
		set
		{
			if ((this._LAN != value))
			{
				this.OnLANChanging(value);
				this.SendPropertyChanging();
				this._LAN = value;
				this.SendPropertyChanged("LAN");
				this.OnLANChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expansion_Slots", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Expansion_Slots
	{
		get
		{
			return this._Expansion_Slots;
		}
		set
		{
			if ((this._Expansion_Slots != value))
			{
				this.OnExpansion_SlotsChanging(value);
				this.SendPropertyChanging();
				this._Expansion_Slots = value;
				this.SendPropertyChanged("Expansion_Slots");
				this.OnExpansion_SlotsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Storage_Interface", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Storage_Interface
	{
		get
		{
			return this._Storage_Interface;
		}
		set
		{
			if ((this._Storage_Interface != value))
			{
				this.OnStorage_InterfaceChanging(value);
				this.SendPropertyChanging();
				this._Storage_Interface = value;
				this.SendPropertyChanged("Storage_Interface");
				this.OnStorage_InterfaceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Multi_GPU_Tech", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Multi_GPU_Tech
	{
		get
		{
			return this._Multi_GPU_Tech;
		}
		set
		{
			if ((this._Multi_GPU_Tech != value))
			{
				this.OnMulti_GPU_TechChanging(value);
				this.SendPropertyChanging();
				this._Multi_GPU_Tech = value;
				this.SendPropertyChanged("Multi_GPU_Tech");
				this.OnMulti_GPU_TechChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USB", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string USB
	{
		get
		{
			return this._USB;
		}
		set
		{
			if ((this._USB != value))
			{
				this.OnUSBChanging(value);
				this.SendPropertyChanging();
				this._USB = value;
				this.SendPropertyChanged("USB");
				this.OnUSBChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Internal_I/O_Connectors]", Storage="_Internal_I_O_Connectors", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Internal_I_O_Connectors
	{
		get
		{
			return this._Internal_I_O_Connectors;
		}
		set
		{
			if ((this._Internal_I_O_Connectors != value))
			{
				this.OnInternal_I_O_ConnectorsChanging(value);
				this.SendPropertyChanging();
				this._Internal_I_O_Connectors = value;
				this.SendPropertyChanged("Internal_I_O_Connectors");
				this.OnInternal_I_O_ConnectorsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Back_Panel_Connectors", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Back_Panel_Connectors
	{
		get
		{
			return this._Back_Panel_Connectors;
		}
		set
		{
			if ((this._Back_Panel_Connectors != value))
			{
				this.OnBack_Panel_ConnectorsChanging(value);
				this.SendPropertyChanging();
				this._Back_Panel_Connectors = value;
				this.SendPropertyChanged("Back_Panel_Connectors");
				this.OnBack_Panel_ConnectorsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[I/O_Controller]", Storage="_I_O_Controller", DbType="NChar(50) NOT NULL", CanBeNull=false)]
	public string I_O_Controller
	{
		get
		{
			return this._I_O_Controller;
		}
		set
		{
			if ((this._I_O_Controller != value))
			{
				this.OnI_O_ControllerChanging(value);
				this.SendPropertyChanging();
				this._I_O_Controller = value;
				this.SendPropertyChanged("I_O_Controller");
				this.OnI_O_ControllerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BIOS", DbType="NChar(50) NOT NULL", CanBeNull=false)]
	public string BIOS
	{
		get
		{
			return this._BIOS;
		}
		set
		{
			if ((this._BIOS != value))
			{
				this.OnBIOSChanging(value);
				this.SendPropertyChanging();
				this._BIOS = value;
				this.SendPropertyChanged("BIOS");
				this.OnBIOSChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OS_Support", DbType="NChar(50) NOT NULL", CanBeNull=false)]
	public string OS_Support
	{
		get
		{
			return this._OS_Support;
		}
		set
		{
			if ((this._OS_Support != value))
			{
				this.OnOS_SupportChanging(value);
				this.SendPropertyChanging();
				this._OS_Support = value;
				this.SendPropertyChanged("OS_Support");
				this.OnOS_SupportChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form_Factor", DbType="NChar(20) NOT NULL", CanBeNull=false)]
	public string Form_Factor
	{
		get
		{
			return this._Form_Factor;
		}
		set
		{
			if ((this._Form_Factor != value))
			{
				this.OnForm_FactorChanging(value);
				this.SendPropertyChanging();
				this._Form_Factor = value;
				this.SendPropertyChanged("Form_Factor");
				this.OnForm_FactorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this.OnNotesChanging(value);
				this.SendPropertyChanging();
				this._Notes = value;
				this.SendPropertyChanged("Notes");
				this.OnNotesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warranty", DbType="NChar(20) NOT NULL", CanBeNull=false)]
	public string Warranty
	{
		get
		{
			return this._Warranty;
		}
		set
		{
			if ((this._Warranty != value))
			{
				this.OnWarrantyChanging(value);
				this.SendPropertyChanging();
				this._Warranty = value;
				this.SendPropertyChanged("Warranty");
				this.OnWarrantyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Motherboard_CaseToMobo", Storage="_CaseToMobos", ThisKey="Model", OtherKey="Mobo_Model")]
	public EntitySet<CaseToMobo> CaseToMobos
	{
		get
		{
			return this._CaseToMobos;
		}
		set
		{
			this._CaseToMobos.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Motherboard_MoboToCPU", Storage="_MoboToCPUs", ThisKey="Model", OtherKey="Mobo_Model")]
	public EntitySet<MoboToCPU> MoboToCPUs
	{
		get
		{
			return this._MoboToCPUs;
		}
		set
		{
			this._MoboToCPUs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Motherboard_MoboToRAM", Storage="_MoboToRAMs", ThisKey="Model", OtherKey="Mobo_Model")]
	public EntitySet<MoboToRAM> MoboToRAMs
	{
		get
		{
			return this._MoboToRAMs;
		}
		set
		{
			this._MoboToRAMs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CaseToMobos(CaseToMobo entity)
	{
		this.SendPropertyChanging();
		entity.Motherboard = this;
	}
	
	private void detach_CaseToMobos(CaseToMobo entity)
	{
		this.SendPropertyChanging();
		entity.Motherboard = null;
	}
	
	private void attach_MoboToCPUs(MoboToCPU entity)
	{
		this.SendPropertyChanging();
		entity.Motherboard = this;
	}
	
	private void detach_MoboToCPUs(MoboToCPU entity)
	{
		this.SendPropertyChanging();
		entity.Motherboard = null;
	}
	
	private void attach_MoboToRAMs(MoboToRAM entity)
	{
		this.SendPropertyChanging();
		entity.Motherboard = this;
	}
	
	private void detach_MoboToRAMs(MoboToRAM entity)
	{
		this.SendPropertyChanging();
		entity.Motherboard = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mouse")]
public partial class Mouse : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Model;
	
	private string _Brand;
	
	private string _Series;
	
	private string _Sensor;
	
	private string _Resolution;
	
	private string _Max_Acceleration;
	
	private string _Max_Speed;
	
	private string _Connection_Type;
	
	private string _Durability;
	
	private string _PTFE_Feet;
	
	private string _Battery;
	
	private string _Dimensions;
	
	private string _Weight;
	
	private string _Cable_Length;
	
	private string _OS_Support;
	
	private string _Warranty;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnSeriesChanging(string value);
    partial void OnSeriesChanged();
    partial void OnSensorChanging(string value);
    partial void OnSensorChanged();
    partial void OnResolutionChanging(string value);
    partial void OnResolutionChanged();
    partial void OnMax_AccelerationChanging(string value);
    partial void OnMax_AccelerationChanged();
    partial void OnMax_SpeedChanging(string value);
    partial void OnMax_SpeedChanged();
    partial void OnConnection_TypeChanging(string value);
    partial void OnConnection_TypeChanged();
    partial void OnDurabilityChanging(string value);
    partial void OnDurabilityChanged();
    partial void OnPTFE_FeetChanging(string value);
    partial void OnPTFE_FeetChanged();
    partial void OnBatteryChanging(string value);
    partial void OnBatteryChanged();
    partial void OnDimensionsChanging(string value);
    partial void OnDimensionsChanged();
    partial void OnWeightChanging(string value);
    partial void OnWeightChanged();
    partial void OnCable_LengthChanging(string value);
    partial void OnCable_LengthChanged();
    partial void OnOS_SupportChanging(string value);
    partial void OnOS_SupportChanged();
    partial void OnWarrantyChanging(string value);
    partial void OnWarrantyChanged();
    #endregion
	
	public Mouse()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this.OnBrandChanging(value);
				this.SendPropertyChanging();
				this._Brand = value;
				this.SendPropertyChanged("Brand");
				this.OnBrandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Series", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Series
	{
		get
		{
			return this._Series;
		}
		set
		{
			if ((this._Series != value))
			{
				this.OnSeriesChanging(value);
				this.SendPropertyChanging();
				this._Series = value;
				this.SendPropertyChanged("Series");
				this.OnSeriesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sensor", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Sensor
	{
		get
		{
			return this._Sensor;
		}
		set
		{
			if ((this._Sensor != value))
			{
				this.OnSensorChanging(value);
				this.SendPropertyChanging();
				this._Sensor = value;
				this.SendPropertyChanged("Sensor");
				this.OnSensorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resolution", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Resolution
	{
		get
		{
			return this._Resolution;
		}
		set
		{
			if ((this._Resolution != value))
			{
				this.OnResolutionChanging(value);
				this.SendPropertyChanging();
				this._Resolution = value;
				this.SendPropertyChanged("Resolution");
				this.OnResolutionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Max_Acceleration", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Max_Acceleration
	{
		get
		{
			return this._Max_Acceleration;
		}
		set
		{
			if ((this._Max_Acceleration != value))
			{
				this.OnMax_AccelerationChanging(value);
				this.SendPropertyChanging();
				this._Max_Acceleration = value;
				this.SendPropertyChanged("Max_Acceleration");
				this.OnMax_AccelerationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Max_Speed", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Max_Speed
	{
		get
		{
			return this._Max_Speed;
		}
		set
		{
			if ((this._Max_Speed != value))
			{
				this.OnMax_SpeedChanging(value);
				this.SendPropertyChanging();
				this._Max_Speed = value;
				this.SendPropertyChanged("Max_Speed");
				this.OnMax_SpeedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Connection_Type
	{
		get
		{
			return this._Connection_Type;
		}
		set
		{
			if ((this._Connection_Type != value))
			{
				this.OnConnection_TypeChanging(value);
				this.SendPropertyChanging();
				this._Connection_Type = value;
				this.SendPropertyChanged("Connection_Type");
				this.OnConnection_TypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Durability", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Durability
	{
		get
		{
			return this._Durability;
		}
		set
		{
			if ((this._Durability != value))
			{
				this.OnDurabilityChanging(value);
				this.SendPropertyChanging();
				this._Durability = value;
				this.SendPropertyChanged("Durability");
				this.OnDurabilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTFE_Feet", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string PTFE_Feet
	{
		get
		{
			return this._PTFE_Feet;
		}
		set
		{
			if ((this._PTFE_Feet != value))
			{
				this.OnPTFE_FeetChanging(value);
				this.SendPropertyChanging();
				this._PTFE_Feet = value;
				this.SendPropertyChanged("PTFE_Feet");
				this.OnPTFE_FeetChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Battery", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Battery
	{
		get
		{
			return this._Battery;
		}
		set
		{
			if ((this._Battery != value))
			{
				this.OnBatteryChanging(value);
				this.SendPropertyChanging();
				this._Battery = value;
				this.SendPropertyChanged("Battery");
				this.OnBatteryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dimensions", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Dimensions
	{
		get
		{
			return this._Dimensions;
		}
		set
		{
			if ((this._Dimensions != value))
			{
				this.OnDimensionsChanging(value);
				this.SendPropertyChanging();
				this._Dimensions = value;
				this.SendPropertyChanged("Dimensions");
				this.OnDimensionsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this.OnWeightChanging(value);
				this.SendPropertyChanging();
				this._Weight = value;
				this.SendPropertyChanged("Weight");
				this.OnWeightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cable_Length", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Cable_Length
	{
		get
		{
			return this._Cable_Length;
		}
		set
		{
			if ((this._Cable_Length != value))
			{
				this.OnCable_LengthChanging(value);
				this.SendPropertyChanging();
				this._Cable_Length = value;
				this.SendPropertyChanged("Cable_Length");
				this.OnCable_LengthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OS_Support", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string OS_Support
	{
		get
		{
			return this._OS_Support;
		}
		set
		{
			if ((this._OS_Support != value))
			{
				this.OnOS_SupportChanging(value);
				this.SendPropertyChanging();
				this._OS_Support = value;
				this.SendPropertyChanged("OS_Support");
				this.OnOS_SupportChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warranty", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Warranty
	{
		get
		{
			return this._Warranty;
		}
		set
		{
			if ((this._Warranty != value))
			{
				this.OnWarrantyChanging(value);
				this.SendPropertyChanging();
				this._Warranty = value;
				this.SendPropertyChanged("Warranty");
				this.OnWarrantyChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MousePad")]
public partial class MousePad : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Model;
	
	private string _Brand;
	
	private string _Series;
	
	private string _Colour;
	
	private string _Size;
	
	private string _Materials;
	
	private string _Base;
	
	private string _Dimensions;
	
	private string _Weight;
	
	private string _Features;
	
	private string _Warranty;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnSeriesChanging(string value);
    partial void OnSeriesChanged();
    partial void OnColourChanging(string value);
    partial void OnColourChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnMaterialsChanging(string value);
    partial void OnMaterialsChanged();
    partial void OnBaseChanging(string value);
    partial void OnBaseChanged();
    partial void OnDimensionsChanging(string value);
    partial void OnDimensionsChanged();
    partial void OnWeightChanging(string value);
    partial void OnWeightChanged();
    partial void OnFeaturesChanging(string value);
    partial void OnFeaturesChanged();
    partial void OnWarrantyChanging(string value);
    partial void OnWarrantyChanged();
    #endregion
	
	public MousePad()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this.OnBrandChanging(value);
				this.SendPropertyChanging();
				this._Brand = value;
				this.SendPropertyChanged("Brand");
				this.OnBrandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Series", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Series
	{
		get
		{
			return this._Series;
		}
		set
		{
			if ((this._Series != value))
			{
				this.OnSeriesChanging(value);
				this.SendPropertyChanging();
				this._Series = value;
				this.SendPropertyChanged("Series");
				this.OnSeriesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Colour", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Colour
	{
		get
		{
			return this._Colour;
		}
		set
		{
			if ((this._Colour != value))
			{
				this.OnColourChanging(value);
				this.SendPropertyChanging();
				this._Colour = value;
				this.SendPropertyChanged("Colour");
				this.OnColourChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Size
	{
		get
		{
			return this._Size;
		}
		set
		{
			if ((this._Size != value))
			{
				this.OnSizeChanging(value);
				this.SendPropertyChanging();
				this._Size = value;
				this.SendPropertyChanged("Size");
				this.OnSizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Materials", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Materials
	{
		get
		{
			return this._Materials;
		}
		set
		{
			if ((this._Materials != value))
			{
				this.OnMaterialsChanging(value);
				this.SendPropertyChanging();
				this._Materials = value;
				this.SendPropertyChanged("Materials");
				this.OnMaterialsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Base", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Base
	{
		get
		{
			return this._Base;
		}
		set
		{
			if ((this._Base != value))
			{
				this.OnBaseChanging(value);
				this.SendPropertyChanging();
				this._Base = value;
				this.SendPropertyChanged("Base");
				this.OnBaseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dimensions", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Dimensions
	{
		get
		{
			return this._Dimensions;
		}
		set
		{
			if ((this._Dimensions != value))
			{
				this.OnDimensionsChanging(value);
				this.SendPropertyChanging();
				this._Dimensions = value;
				this.SendPropertyChanged("Dimensions");
				this.OnDimensionsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this.OnWeightChanging(value);
				this.SendPropertyChanging();
				this._Weight = value;
				this.SendPropertyChanged("Weight");
				this.OnWeightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Features", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Features
	{
		get
		{
			return this._Features;
		}
		set
		{
			if ((this._Features != value))
			{
				this.OnFeaturesChanging(value);
				this.SendPropertyChanging();
				this._Features = value;
				this.SendPropertyChanged("Features");
				this.OnFeaturesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warranty", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Warranty
	{
		get
		{
			return this._Warranty;
		}
		set
		{
			if ((this._Warranty != value))
			{
				this.OnWarrantyChanging(value);
				this.SendPropertyChanging();
				this._Warranty = value;
				this.SendPropertyChanged("Warranty");
				this.OnWarrantyChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OS")]
public partial class O : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Model;
	
	private string _Brand;
	
	private string _Series;
	
	private string _Bit_Version;
	
	private string _OS_Version;
	
	private string _System_Requirements;
	
	private string _Warranty;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnSeriesChanging(string value);
    partial void OnSeriesChanged();
    partial void OnBit_VersionChanging(string value);
    partial void OnBit_VersionChanged();
    partial void OnOS_VersionChanging(string value);
    partial void OnOS_VersionChanged();
    partial void OnSystem_RequirementsChanging(string value);
    partial void OnSystem_RequirementsChanged();
    partial void OnWarrantyChanging(string value);
    partial void OnWarrantyChanged();
    #endregion
	
	public O()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this.OnBrandChanging(value);
				this.SendPropertyChanging();
				this._Brand = value;
				this.SendPropertyChanged("Brand");
				this.OnBrandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Series", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Series
	{
		get
		{
			return this._Series;
		}
		set
		{
			if ((this._Series != value))
			{
				this.OnSeriesChanging(value);
				this.SendPropertyChanging();
				this._Series = value;
				this.SendPropertyChanged("Series");
				this.OnSeriesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bit_Version", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Bit_Version
	{
		get
		{
			return this._Bit_Version;
		}
		set
		{
			if ((this._Bit_Version != value))
			{
				this.OnBit_VersionChanging(value);
				this.SendPropertyChanging();
				this._Bit_Version = value;
				this.SendPropertyChanged("Bit_Version");
				this.OnBit_VersionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OS_Version", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string OS_Version
	{
		get
		{
			return this._OS_Version;
		}
		set
		{
			if ((this._OS_Version != value))
			{
				this.OnOS_VersionChanging(value);
				this.SendPropertyChanging();
				this._OS_Version = value;
				this.SendPropertyChanged("OS_Version");
				this.OnOS_VersionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_System_Requirements", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string System_Requirements
	{
		get
		{
			return this._System_Requirements;
		}
		set
		{
			if ((this._System_Requirements != value))
			{
				this.OnSystem_RequirementsChanging(value);
				this.SendPropertyChanging();
				this._System_Requirements = value;
				this.SendPropertyChanged("System_Requirements");
				this.OnSystem_RequirementsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warranty", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Warranty
	{
		get
		{
			return this._Warranty;
		}
		set
		{
			if ((this._Warranty != value))
			{
				this.OnWarrantyChanging(value);
				this.SendPropertyChanging();
				this._Warranty = value;
				this.SendPropertyChanged("Warranty");
				this.OnWarrantyChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PCCase")]
public partial class PCCase : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Model;
	
	private string _Brand;
	
	private string _Series;
	
	private string _Colour;
	
	private string _Dimensions;
	
	private string _Net_Weight;
	
	private string _Motherboard_Support;
	
	private string _Num_5_25__Drives;
	
	private string _Num_3_5__Drives;
	
	private string _Num_2_5__Drives;
	
	private string _I_O_Port;
	
	private string _Expansion_Slots;
	
	private string _Num_Top_Fans;
	
	private string _Num_Bottom_Fans;
	
	private string _Num_Front_Fans;
	
	private string _Num_Back_Fans;
	
	private string _Top_Radiator_Support;
	
	private string _Front_Radiator_Support;
	
	private string _PSU_Support;
	
	private string _GPU_Max_Length;
	
	private string _CPU_Cooler_Height;
	
	private string _Warranty;
	
	private EntitySet<CaseToMobo> _CaseToMobos;
	
	private EntitySet<PSUtoCase> _PSUtoCases;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnSeriesChanging(string value);
    partial void OnSeriesChanged();
    partial void OnColourChanging(string value);
    partial void OnColourChanged();
    partial void OnDimensionsChanging(string value);
    partial void OnDimensionsChanged();
    partial void OnNet_WeightChanging(string value);
    partial void OnNet_WeightChanged();
    partial void OnMotherboard_SupportChanging(string value);
    partial void OnMotherboard_SupportChanged();
    partial void OnNum_5_25__DrivesChanging(string value);
    partial void OnNum_5_25__DrivesChanged();
    partial void OnNum_3_5__DrivesChanging(string value);
    partial void OnNum_3_5__DrivesChanged();
    partial void OnNum_2_5__DrivesChanging(string value);
    partial void OnNum_2_5__DrivesChanged();
    partial void OnI_O_PortChanging(string value);
    partial void OnI_O_PortChanged();
    partial void OnExpansion_SlotsChanging(string value);
    partial void OnExpansion_SlotsChanged();
    partial void OnNum_Top_FansChanging(string value);
    partial void OnNum_Top_FansChanged();
    partial void OnNum_Bottom_FansChanging(string value);
    partial void OnNum_Bottom_FansChanged();
    partial void OnNum_Front_FansChanging(string value);
    partial void OnNum_Front_FansChanged();
    partial void OnNum_Back_FansChanging(string value);
    partial void OnNum_Back_FansChanged();
    partial void OnTop_Radiator_SupportChanging(string value);
    partial void OnTop_Radiator_SupportChanged();
    partial void OnFront_Radiator_SupportChanging(string value);
    partial void OnFront_Radiator_SupportChanged();
    partial void OnPSU_SupportChanging(string value);
    partial void OnPSU_SupportChanged();
    partial void OnGPU_Max_LengthChanging(string value);
    partial void OnGPU_Max_LengthChanged();
    partial void OnCPU_Cooler_HeightChanging(string value);
    partial void OnCPU_Cooler_HeightChanged();
    partial void OnWarrantyChanging(string value);
    partial void OnWarrantyChanged();
    #endregion
	
	public PCCase()
	{
		this._CaseToMobos = new EntitySet<CaseToMobo>(new Action<CaseToMobo>(this.attach_CaseToMobos), new Action<CaseToMobo>(this.detach_CaseToMobos));
		this._PSUtoCases = new EntitySet<PSUtoCase>(new Action<PSUtoCase>(this.attach_PSUtoCases), new Action<PSUtoCase>(this.detach_PSUtoCases));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="NChar(50) NOT NULL", CanBeNull=false)]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this.OnBrandChanging(value);
				this.SendPropertyChanging();
				this._Brand = value;
				this.SendPropertyChanged("Brand");
				this.OnBrandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Series", DbType="NChar(50) NOT NULL", CanBeNull=false)]
	public string Series
	{
		get
		{
			return this._Series;
		}
		set
		{
			if ((this._Series != value))
			{
				this.OnSeriesChanging(value);
				this.SendPropertyChanging();
				this._Series = value;
				this.SendPropertyChanged("Series");
				this.OnSeriesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Colour", DbType="NChar(50) NOT NULL", CanBeNull=false)]
	public string Colour
	{
		get
		{
			return this._Colour;
		}
		set
		{
			if ((this._Colour != value))
			{
				this.OnColourChanging(value);
				this.SendPropertyChanging();
				this._Colour = value;
				this.SendPropertyChanged("Colour");
				this.OnColourChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dimensions", DbType="NChar(20) NOT NULL", CanBeNull=false)]
	public string Dimensions
	{
		get
		{
			return this._Dimensions;
		}
		set
		{
			if ((this._Dimensions != value))
			{
				this.OnDimensionsChanging(value);
				this.SendPropertyChanging();
				this._Dimensions = value;
				this.SendPropertyChanged("Dimensions");
				this.OnDimensionsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Net_Weight", DbType="NChar(20) NOT NULL", CanBeNull=false)]
	public string Net_Weight
	{
		get
		{
			return this._Net_Weight;
		}
		set
		{
			if ((this._Net_Weight != value))
			{
				this.OnNet_WeightChanging(value);
				this.SendPropertyChanging();
				this._Net_Weight = value;
				this.SendPropertyChanged("Net_Weight");
				this.OnNet_WeightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Motherboard_Support", DbType="NChar(20) NOT NULL", CanBeNull=false)]
	public string Motherboard_Support
	{
		get
		{
			return this._Motherboard_Support;
		}
		set
		{
			if ((this._Motherboard_Support != value))
			{
				this.OnMotherboard_SupportChanging(value);
				this.SendPropertyChanging();
				this._Motherboard_Support = value;
				this.SendPropertyChanged("Motherboard_Support");
				this.OnMotherboard_SupportChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Num_5.25\"_Drives]", Storage="_Num_5_25__Drives", DbType="NChar(50) NOT NULL", CanBeNull=false)]
	public string Num_5_25__Drives
	{
		get
		{
			return this._Num_5_25__Drives;
		}
		set
		{
			if ((this._Num_5_25__Drives != value))
			{
				this.OnNum_5_25__DrivesChanging(value);
				this.SendPropertyChanging();
				this._Num_5_25__Drives = value;
				this.SendPropertyChanged("Num_5_25__Drives");
				this.OnNum_5_25__DrivesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Num_3.5\"_Drives]", Storage="_Num_3_5__Drives", DbType="NChar(50) NOT NULL", CanBeNull=false)]
	public string Num_3_5__Drives
	{
		get
		{
			return this._Num_3_5__Drives;
		}
		set
		{
			if ((this._Num_3_5__Drives != value))
			{
				this.OnNum_3_5__DrivesChanging(value);
				this.SendPropertyChanging();
				this._Num_3_5__Drives = value;
				this.SendPropertyChanged("Num_3_5__Drives");
				this.OnNum_3_5__DrivesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Num_2.5\"_Drives]", Storage="_Num_2_5__Drives", DbType="NChar(50) NOT NULL", CanBeNull=false)]
	public string Num_2_5__Drives
	{
		get
		{
			return this._Num_2_5__Drives;
		}
		set
		{
			if ((this._Num_2_5__Drives != value))
			{
				this.OnNum_2_5__DrivesChanging(value);
				this.SendPropertyChanging();
				this._Num_2_5__Drives = value;
				this.SendPropertyChanged("Num_2_5__Drives");
				this.OnNum_2_5__DrivesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[I/O_Port]", Storage="_I_O_Port", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string I_O_Port
	{
		get
		{
			return this._I_O_Port;
		}
		set
		{
			if ((this._I_O_Port != value))
			{
				this.OnI_O_PortChanging(value);
				this.SendPropertyChanging();
				this._I_O_Port = value;
				this.SendPropertyChanged("I_O_Port");
				this.OnI_O_PortChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expansion_Slots", DbType="NChar(50) NOT NULL", CanBeNull=false)]
	public string Expansion_Slots
	{
		get
		{
			return this._Expansion_Slots;
		}
		set
		{
			if ((this._Expansion_Slots != value))
			{
				this.OnExpansion_SlotsChanging(value);
				this.SendPropertyChanging();
				this._Expansion_Slots = value;
				this.SendPropertyChanged("Expansion_Slots");
				this.OnExpansion_SlotsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num_Top_Fans", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Num_Top_Fans
	{
		get
		{
			return this._Num_Top_Fans;
		}
		set
		{
			if ((this._Num_Top_Fans != value))
			{
				this.OnNum_Top_FansChanging(value);
				this.SendPropertyChanging();
				this._Num_Top_Fans = value;
				this.SendPropertyChanged("Num_Top_Fans");
				this.OnNum_Top_FansChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num_Bottom_Fans", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Num_Bottom_Fans
	{
		get
		{
			return this._Num_Bottom_Fans;
		}
		set
		{
			if ((this._Num_Bottom_Fans != value))
			{
				this.OnNum_Bottom_FansChanging(value);
				this.SendPropertyChanging();
				this._Num_Bottom_Fans = value;
				this.SendPropertyChanged("Num_Bottom_Fans");
				this.OnNum_Bottom_FansChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num_Front_Fans", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Num_Front_Fans
	{
		get
		{
			return this._Num_Front_Fans;
		}
		set
		{
			if ((this._Num_Front_Fans != value))
			{
				this.OnNum_Front_FansChanging(value);
				this.SendPropertyChanging();
				this._Num_Front_Fans = value;
				this.SendPropertyChanged("Num_Front_Fans");
				this.OnNum_Front_FansChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num_Back_Fans", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Num_Back_Fans
	{
		get
		{
			return this._Num_Back_Fans;
		}
		set
		{
			if ((this._Num_Back_Fans != value))
			{
				this.OnNum_Back_FansChanging(value);
				this.SendPropertyChanging();
				this._Num_Back_Fans = value;
				this.SendPropertyChanged("Num_Back_Fans");
				this.OnNum_Back_FansChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Top_Radiator_Support", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Top_Radiator_Support
	{
		get
		{
			return this._Top_Radiator_Support;
		}
		set
		{
			if ((this._Top_Radiator_Support != value))
			{
				this.OnTop_Radiator_SupportChanging(value);
				this.SendPropertyChanging();
				this._Top_Radiator_Support = value;
				this.SendPropertyChanged("Top_Radiator_Support");
				this.OnTop_Radiator_SupportChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Front_Radiator_Support", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Front_Radiator_Support
	{
		get
		{
			return this._Front_Radiator_Support;
		}
		set
		{
			if ((this._Front_Radiator_Support != value))
			{
				this.OnFront_Radiator_SupportChanging(value);
				this.SendPropertyChanging();
				this._Front_Radiator_Support = value;
				this.SendPropertyChanged("Front_Radiator_Support");
				this.OnFront_Radiator_SupportChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PSU_Support", DbType="NChar(50) NOT NULL", CanBeNull=false)]
	public string PSU_Support
	{
		get
		{
			return this._PSU_Support;
		}
		set
		{
			if ((this._PSU_Support != value))
			{
				this.OnPSU_SupportChanging(value);
				this.SendPropertyChanging();
				this._PSU_Support = value;
				this.SendPropertyChanged("PSU_Support");
				this.OnPSU_SupportChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPU_Max_Length", DbType="NChar(20) NOT NULL", CanBeNull=false)]
	public string GPU_Max_Length
	{
		get
		{
			return this._GPU_Max_Length;
		}
		set
		{
			if ((this._GPU_Max_Length != value))
			{
				this.OnGPU_Max_LengthChanging(value);
				this.SendPropertyChanging();
				this._GPU_Max_Length = value;
				this.SendPropertyChanged("GPU_Max_Length");
				this.OnGPU_Max_LengthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPU_Cooler_Height", DbType="NChar(20) NOT NULL", CanBeNull=false)]
	public string CPU_Cooler_Height
	{
		get
		{
			return this._CPU_Cooler_Height;
		}
		set
		{
			if ((this._CPU_Cooler_Height != value))
			{
				this.OnCPU_Cooler_HeightChanging(value);
				this.SendPropertyChanging();
				this._CPU_Cooler_Height = value;
				this.SendPropertyChanged("CPU_Cooler_Height");
				this.OnCPU_Cooler_HeightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warranty", DbType="NChar(50) NOT NULL", CanBeNull=false)]
	public string Warranty
	{
		get
		{
			return this._Warranty;
		}
		set
		{
			if ((this._Warranty != value))
			{
				this.OnWarrantyChanging(value);
				this.SendPropertyChanging();
				this._Warranty = value;
				this.SendPropertyChanged("Warranty");
				this.OnWarrantyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCCase_CaseToMobo", Storage="_CaseToMobos", ThisKey="Model", OtherKey="Case_Model")]
	public EntitySet<CaseToMobo> CaseToMobos
	{
		get
		{
			return this._CaseToMobos;
		}
		set
		{
			this._CaseToMobos.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCCase_PSUtoCase", Storage="_PSUtoCases", ThisKey="Model", OtherKey="Case_Model")]
	public EntitySet<PSUtoCase> PSUtoCases
	{
		get
		{
			return this._PSUtoCases;
		}
		set
		{
			this._PSUtoCases.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CaseToMobos(CaseToMobo entity)
	{
		this.SendPropertyChanging();
		entity.PCCase = this;
	}
	
	private void detach_CaseToMobos(CaseToMobo entity)
	{
		this.SendPropertyChanging();
		entity.PCCase = null;
	}
	
	private void attach_PSUtoCases(PSUtoCase entity)
	{
		this.SendPropertyChanging();
		entity.PCCase = this;
	}
	
	private void detach_PSUtoCases(PSUtoCase entity)
	{
		this.SendPropertyChanging();
		entity.PCCase = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PSU")]
public partial class PSU : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Model;
	
	private string _Brand;
	
	private string _Series;
	
	private string _Power;
	
	private string _Certification;
	
	private string _Modular;
	
	private string _Connectors;
	
	private string _MTBF;
	
	private string _Fan_Size;
	
	private string _Cables;
	
	private string _Compatability;
	
	private string _Package_Content;
	
	private string _Warranty;
	
	private EntitySet<PSUtoCase> _PSUtoCases;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnSeriesChanging(string value);
    partial void OnSeriesChanged();
    partial void OnPowerChanging(string value);
    partial void OnPowerChanged();
    partial void OnCertificationChanging(string value);
    partial void OnCertificationChanged();
    partial void OnModularChanging(string value);
    partial void OnModularChanged();
    partial void OnConnectorsChanging(string value);
    partial void OnConnectorsChanged();
    partial void OnMTBFChanging(string value);
    partial void OnMTBFChanged();
    partial void OnFan_SizeChanging(string value);
    partial void OnFan_SizeChanged();
    partial void OnCablesChanging(string value);
    partial void OnCablesChanged();
    partial void OnCompatabilityChanging(string value);
    partial void OnCompatabilityChanged();
    partial void OnPackage_ContentChanging(string value);
    partial void OnPackage_ContentChanged();
    partial void OnWarrantyChanging(string value);
    partial void OnWarrantyChanged();
    #endregion
	
	public PSU()
	{
		this._PSUtoCases = new EntitySet<PSUtoCase>(new Action<PSUtoCase>(this.attach_PSUtoCases), new Action<PSUtoCase>(this.detach_PSUtoCases));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="NChar(50) NOT NULL", CanBeNull=false)]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this.OnBrandChanging(value);
				this.SendPropertyChanging();
				this._Brand = value;
				this.SendPropertyChanged("Brand");
				this.OnBrandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Series", DbType="NChar(50) NOT NULL", CanBeNull=false)]
	public string Series
	{
		get
		{
			return this._Series;
		}
		set
		{
			if ((this._Series != value))
			{
				this.OnSeriesChanging(value);
				this.SendPropertyChanging();
				this._Series = value;
				this.SendPropertyChanged("Series");
				this.OnSeriesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="NChar(20) NOT NULL", CanBeNull=false)]
	public string Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Certification", DbType="NChar(20) NOT NULL", CanBeNull=false)]
	public string Certification
	{
		get
		{
			return this._Certification;
		}
		set
		{
			if ((this._Certification != value))
			{
				this.OnCertificationChanging(value);
				this.SendPropertyChanging();
				this._Certification = value;
				this.SendPropertyChanged("Certification");
				this.OnCertificationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modular", DbType="NChar(20) NOT NULL", CanBeNull=false)]
	public string Modular
	{
		get
		{
			return this._Modular;
		}
		set
		{
			if ((this._Modular != value))
			{
				this.OnModularChanging(value);
				this.SendPropertyChanging();
				this._Modular = value;
				this.SendPropertyChanged("Modular");
				this.OnModularChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connectors", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Connectors
	{
		get
		{
			return this._Connectors;
		}
		set
		{
			if ((this._Connectors != value))
			{
				this.OnConnectorsChanging(value);
				this.SendPropertyChanging();
				this._Connectors = value;
				this.SendPropertyChanged("Connectors");
				this.OnConnectorsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTBF", DbType="NChar(20) NOT NULL", CanBeNull=false)]
	public string MTBF
	{
		get
		{
			return this._MTBF;
		}
		set
		{
			if ((this._MTBF != value))
			{
				this.OnMTBFChanging(value);
				this.SendPropertyChanging();
				this._MTBF = value;
				this.SendPropertyChanged("MTBF");
				this.OnMTBFChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fan_Size", DbType="NChar(20) NOT NULL", CanBeNull=false)]
	public string Fan_Size
	{
		get
		{
			return this._Fan_Size;
		}
		set
		{
			if ((this._Fan_Size != value))
			{
				this.OnFan_SizeChanging(value);
				this.SendPropertyChanging();
				this._Fan_Size = value;
				this.SendPropertyChanged("Fan_Size");
				this.OnFan_SizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cables", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Cables
	{
		get
		{
			return this._Cables;
		}
		set
		{
			if ((this._Cables != value))
			{
				this.OnCablesChanging(value);
				this.SendPropertyChanging();
				this._Cables = value;
				this.SendPropertyChanged("Cables");
				this.OnCablesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Compatability", DbType="NChar(20) NOT NULL", CanBeNull=false)]
	public string Compatability
	{
		get
		{
			return this._Compatability;
		}
		set
		{
			if ((this._Compatability != value))
			{
				this.OnCompatabilityChanging(value);
				this.SendPropertyChanging();
				this._Compatability = value;
				this.SendPropertyChanged("Compatability");
				this.OnCompatabilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Package_Content", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Package_Content
	{
		get
		{
			return this._Package_Content;
		}
		set
		{
			if ((this._Package_Content != value))
			{
				this.OnPackage_ContentChanging(value);
				this.SendPropertyChanging();
				this._Package_Content = value;
				this.SendPropertyChanged("Package_Content");
				this.OnPackage_ContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warranty", DbType="NChar(20) NOT NULL", CanBeNull=false)]
	public string Warranty
	{
		get
		{
			return this._Warranty;
		}
		set
		{
			if ((this._Warranty != value))
			{
				this.OnWarrantyChanging(value);
				this.SendPropertyChanging();
				this._Warranty = value;
				this.SendPropertyChanged("Warranty");
				this.OnWarrantyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PSU_PSUtoCase", Storage="_PSUtoCases", ThisKey="Model", OtherKey="PSU_Model")]
	public EntitySet<PSUtoCase> PSUtoCases
	{
		get
		{
			return this._PSUtoCases;
		}
		set
		{
			this._PSUtoCases.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_PSUtoCases(PSUtoCase entity)
	{
		this.SendPropertyChanging();
		entity.PSU = this;
	}
	
	private void detach_PSUtoCases(PSUtoCase entity)
	{
		this.SendPropertyChanging();
		entity.PSU = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PSUtoCase")]
public partial class PSUtoCase : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Case_Model;
	
	private string _PSU_Model;
	
	private string _Max_Watts;
	
	private EntityRef<PCCase> _PCCase;
	
	private EntityRef<PSU> _PSU;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCase_ModelChanging(string value);
    partial void OnCase_ModelChanged();
    partial void OnPSU_ModelChanging(string value);
    partial void OnPSU_ModelChanged();
    partial void OnMax_WattsChanging(string value);
    partial void OnMax_WattsChanged();
    #endregion
	
	public PSUtoCase()
	{
		this._PCCase = default(EntityRef<PCCase>);
		this._PSU = default(EntityRef<PSU>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Case_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Case_Model
	{
		get
		{
			return this._Case_Model;
		}
		set
		{
			if ((this._Case_Model != value))
			{
				if (this._PCCase.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCase_ModelChanging(value);
				this.SendPropertyChanging();
				this._Case_Model = value;
				this.SendPropertyChanged("Case_Model");
				this.OnCase_ModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PSU_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string PSU_Model
	{
		get
		{
			return this._PSU_Model;
		}
		set
		{
			if ((this._PSU_Model != value))
			{
				if (this._PSU.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPSU_ModelChanging(value);
				this.SendPropertyChanging();
				this._PSU_Model = value;
				this.SendPropertyChanged("PSU_Model");
				this.OnPSU_ModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Max_Watts", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Max_Watts
	{
		get
		{
			return this._Max_Watts;
		}
		set
		{
			if ((this._Max_Watts != value))
			{
				this.OnMax_WattsChanging(value);
				this.SendPropertyChanging();
				this._Max_Watts = value;
				this.SendPropertyChanged("Max_Watts");
				this.OnMax_WattsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PCCase_PSUtoCase", Storage="_PCCase", ThisKey="Case_Model", OtherKey="Model", IsForeignKey=true)]
	public PCCase PCCase
	{
		get
		{
			return this._PCCase.Entity;
		}
		set
		{
			PCCase previousValue = this._PCCase.Entity;
			if (((previousValue != value) 
						|| (this._PCCase.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._PCCase.Entity = null;
					previousValue.PSUtoCases.Remove(this);
				}
				this._PCCase.Entity = value;
				if ((value != null))
				{
					value.PSUtoCases.Add(this);
					this._Case_Model = value.Model;
				}
				else
				{
					this._Case_Model = default(string);
				}
				this.SendPropertyChanged("PCCase");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PSU_PSUtoCase", Storage="_PSU", ThisKey="PSU_Model", OtherKey="Model", IsForeignKey=true)]
	public PSU PSU
	{
		get
		{
			return this._PSU.Entity;
		}
		set
		{
			PSU previousValue = this._PSU.Entity;
			if (((previousValue != value) 
						|| (this._PSU.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._PSU.Entity = null;
					previousValue.PSUtoCases.Remove(this);
				}
				this._PSU.Entity = value;
				if ((value != null))
				{
					value.PSUtoCases.Add(this);
					this._PSU_Model = value.Model;
				}
				else
				{
					this._PSU_Model = default(string);
				}
				this.SendPropertyChanged("PSU");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RAM")]
public partial class RAM : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Model;
	
	private string _Brand;
	
	private string _Series;
	
	private string _Capacity;
	
	private string _Type;
	
	private string _Speed;
	
	private string _Latency;
	
	private string _Voltage;
	
	private string _SPD_Speed;
	
	private string _SPD_Voltage;
	
	private string _Channel_Config;
	
	private string _Height;
	
	private string _Warranty;
	
	private EntitySet<MoboToRAM> _MoboToRAMs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnSeriesChanging(string value);
    partial void OnSeriesChanged();
    partial void OnCapacityChanging(string value);
    partial void OnCapacityChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnSpeedChanging(string value);
    partial void OnSpeedChanged();
    partial void OnLatencyChanging(string value);
    partial void OnLatencyChanged();
    partial void OnVoltageChanging(string value);
    partial void OnVoltageChanged();
    partial void OnSPD_SpeedChanging(string value);
    partial void OnSPD_SpeedChanged();
    partial void OnSPD_VoltageChanging(string value);
    partial void OnSPD_VoltageChanged();
    partial void OnChannel_ConfigChanging(string value);
    partial void OnChannel_ConfigChanged();
    partial void OnHeightChanging(string value);
    partial void OnHeightChanged();
    partial void OnWarrantyChanging(string value);
    partial void OnWarrantyChanged();
    #endregion
	
	public RAM()
	{
		this._MoboToRAMs = new EntitySet<MoboToRAM>(new Action<MoboToRAM>(this.attach_MoboToRAMs), new Action<MoboToRAM>(this.detach_MoboToRAMs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="NChar(20) NOT NULL", CanBeNull=false)]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this.OnBrandChanging(value);
				this.SendPropertyChanging();
				this._Brand = value;
				this.SendPropertyChanged("Brand");
				this.OnBrandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Series", DbType="NChar(20) NOT NULL", CanBeNull=false)]
	public string Series
	{
		get
		{
			return this._Series;
		}
		set
		{
			if ((this._Series != value))
			{
				this.OnSeriesChanging(value);
				this.SendPropertyChanging();
				this._Series = value;
				this.SendPropertyChanged("Series");
				this.OnSeriesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="NChar(20) NOT NULL", CanBeNull=false)]
	public string Capacity
	{
		get
		{
			return this._Capacity;
		}
		set
		{
			if ((this._Capacity != value))
			{
				this.OnCapacityChanging(value);
				this.SendPropertyChanging();
				this._Capacity = value;
				this.SendPropertyChanged("Capacity");
				this.OnCapacityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Speed", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string Speed
	{
		get
		{
			return this._Speed;
		}
		set
		{
			if ((this._Speed != value))
			{
				this.OnSpeedChanging(value);
				this.SendPropertyChanging();
				this._Speed = value;
				this.SendPropertyChanged("Speed");
				this.OnSpeedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latency", DbType="NChar(20) NOT NULL", CanBeNull=false)]
	public string Latency
	{
		get
		{
			return this._Latency;
		}
		set
		{
			if ((this._Latency != value))
			{
				this.OnLatencyChanging(value);
				this.SendPropertyChanging();
				this._Latency = value;
				this.SendPropertyChanged("Latency");
				this.OnLatencyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Voltage", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string Voltage
	{
		get
		{
			return this._Voltage;
		}
		set
		{
			if ((this._Voltage != value))
			{
				this.OnVoltageChanging(value);
				this.SendPropertyChanging();
				this._Voltage = value;
				this.SendPropertyChanged("Voltage");
				this.OnVoltageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPD_Speed", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string SPD_Speed
	{
		get
		{
			return this._SPD_Speed;
		}
		set
		{
			if ((this._SPD_Speed != value))
			{
				this.OnSPD_SpeedChanging(value);
				this.SendPropertyChanging();
				this._SPD_Speed = value;
				this.SendPropertyChanged("SPD_Speed");
				this.OnSPD_SpeedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPD_Voltage", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string SPD_Voltage
	{
		get
		{
			return this._SPD_Voltage;
		}
		set
		{
			if ((this._SPD_Voltage != value))
			{
				this.OnSPD_VoltageChanging(value);
				this.SendPropertyChanging();
				this._SPD_Voltage = value;
				this.SendPropertyChanged("SPD_Voltage");
				this.OnSPD_VoltageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Channel_Config", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string Channel_Config
	{
		get
		{
			return this._Channel_Config;
		}
		set
		{
			if ((this._Channel_Config != value))
			{
				this.OnChannel_ConfigChanging(value);
				this.SendPropertyChanging();
				this._Channel_Config = value;
				this.SendPropertyChanged("Channel_Config");
				this.OnChannel_ConfigChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string Height
	{
		get
		{
			return this._Height;
		}
		set
		{
			if ((this._Height != value))
			{
				this.OnHeightChanging(value);
				this.SendPropertyChanging();
				this._Height = value;
				this.SendPropertyChanged("Height");
				this.OnHeightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warranty", DbType="NChar(20) NOT NULL", CanBeNull=false)]
	public string Warranty
	{
		get
		{
			return this._Warranty;
		}
		set
		{
			if ((this._Warranty != value))
			{
				this.OnWarrantyChanging(value);
				this.SendPropertyChanging();
				this._Warranty = value;
				this.SendPropertyChanged("Warranty");
				this.OnWarrantyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RAM_MoboToRAM", Storage="_MoboToRAMs", ThisKey="Model", OtherKey="RAM_Model")]
	public EntitySet<MoboToRAM> MoboToRAMs
	{
		get
		{
			return this._MoboToRAMs;
		}
		set
		{
			this._MoboToRAMs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_MoboToRAMs(MoboToRAM entity)
	{
		this.SendPropertyChanging();
		entity.RAM = this;
	}
	
	private void detach_MoboToRAMs(MoboToRAM entity)
	{
		this.SendPropertyChanging();
		entity.RAM = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Speaker")]
public partial class Speaker : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Model;
	
	private string _Brand;
	
	private string _Satellite_Dimensions;
	
	private string _Satellite_Weight;
	
	private string _SubWoofer_Dimensions;
	
	private string _SubWoofer_Weight;
	
	private string _controls;
	
	private string _System_Requirements;
	
	private string _Features;
	
	private string _Warranty;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnSatellite_DimensionsChanging(string value);
    partial void OnSatellite_DimensionsChanged();
    partial void OnSatellite_WeightChanging(string value);
    partial void OnSatellite_WeightChanged();
    partial void OnSubWoofer_DimensionsChanging(string value);
    partial void OnSubWoofer_DimensionsChanged();
    partial void OnSubWoofer_WeightChanging(string value);
    partial void OnSubWoofer_WeightChanged();
    partial void OncontrolsChanging(string value);
    partial void OncontrolsChanged();
    partial void OnSystem_RequirementsChanging(string value);
    partial void OnSystem_RequirementsChanged();
    partial void OnFeaturesChanging(string value);
    partial void OnFeaturesChanged();
    partial void OnWarrantyChanging(string value);
    partial void OnWarrantyChanged();
    #endregion
	
	public Speaker()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this.OnBrandChanging(value);
				this.SendPropertyChanging();
				this._Brand = value;
				this.SendPropertyChanged("Brand");
				this.OnBrandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Satellite_Dimensions", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Satellite_Dimensions
	{
		get
		{
			return this._Satellite_Dimensions;
		}
		set
		{
			if ((this._Satellite_Dimensions != value))
			{
				this.OnSatellite_DimensionsChanging(value);
				this.SendPropertyChanging();
				this._Satellite_Dimensions = value;
				this.SendPropertyChanged("Satellite_Dimensions");
				this.OnSatellite_DimensionsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Satellite_Weight", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Satellite_Weight
	{
		get
		{
			return this._Satellite_Weight;
		}
		set
		{
			if ((this._Satellite_Weight != value))
			{
				this.OnSatellite_WeightChanging(value);
				this.SendPropertyChanging();
				this._Satellite_Weight = value;
				this.SendPropertyChanged("Satellite_Weight");
				this.OnSatellite_WeightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubWoofer_Dimensions", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string SubWoofer_Dimensions
	{
		get
		{
			return this._SubWoofer_Dimensions;
		}
		set
		{
			if ((this._SubWoofer_Dimensions != value))
			{
				this.OnSubWoofer_DimensionsChanging(value);
				this.SendPropertyChanging();
				this._SubWoofer_Dimensions = value;
				this.SendPropertyChanged("SubWoofer_Dimensions");
				this.OnSubWoofer_DimensionsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubWoofer_Weight", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string SubWoofer_Weight
	{
		get
		{
			return this._SubWoofer_Weight;
		}
		set
		{
			if ((this._SubWoofer_Weight != value))
			{
				this.OnSubWoofer_WeightChanging(value);
				this.SendPropertyChanging();
				this._SubWoofer_Weight = value;
				this.SendPropertyChanged("SubWoofer_Weight");
				this.OnSubWoofer_WeightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_controls", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string controls
	{
		get
		{
			return this._controls;
		}
		set
		{
			if ((this._controls != value))
			{
				this.OncontrolsChanging(value);
				this.SendPropertyChanging();
				this._controls = value;
				this.SendPropertyChanged("controls");
				this.OncontrolsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[System Requirements]", Storage="_System_Requirements", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string System_Requirements
	{
		get
		{
			return this._System_Requirements;
		}
		set
		{
			if ((this._System_Requirements != value))
			{
				this.OnSystem_RequirementsChanging(value);
				this.SendPropertyChanging();
				this._System_Requirements = value;
				this.SendPropertyChanged("System_Requirements");
				this.OnSystem_RequirementsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Features", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Features
	{
		get
		{
			return this._Features;
		}
		set
		{
			if ((this._Features != value))
			{
				this.OnFeaturesChanging(value);
				this.SendPropertyChanging();
				this._Features = value;
				this.SendPropertyChanged("Features");
				this.OnFeaturesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warranty", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Warranty
	{
		get
		{
			return this._Warranty;
		}
		set
		{
			if ((this._Warranty != value))
			{
				this.OnWarrantyChanging(value);
				this.SendPropertyChanging();
				this._Warranty = value;
				this.SendPropertyChanged("Warranty");
				this.OnWarrantyChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSD")]
public partial class SSD : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Model;
	
	private string _Brand;
	
	private string _Series;
	
	private string _Form_Factor;
	
	private string _Capacity;
	
	private string _Interface;
	
	private string _Dimensions;
	
	private string _Max_Sequential_Read;
	
	private string _Max_Sequential_Write;
	
	private string @__4KB_Random_Read;
	
	private string @__4KB_Random_Write;
	
	private string _Seek_Time;
	
	private string _MTBF;
	
	private string _Operating_Temp;
	
	private string _Storage_Temp;
	
	private string _Idle_Power_Usage;
	
	private string _Max_Power_Usage;
	
	private string _Warrenty;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnSeriesChanging(string value);
    partial void OnSeriesChanged();
    partial void OnForm_FactorChanging(string value);
    partial void OnForm_FactorChanged();
    partial void OnCapacityChanging(string value);
    partial void OnCapacityChanged();
    partial void OnInterfaceChanging(string value);
    partial void OnInterfaceChanged();
    partial void OnDimensionsChanging(string value);
    partial void OnDimensionsChanged();
    partial void OnMax_Sequential_ReadChanging(string value);
    partial void OnMax_Sequential_ReadChanged();
    partial void OnMax_Sequential_WriteChanging(string value);
    partial void OnMax_Sequential_WriteChanged();
    partial void On_4KB_Random_ReadChanging(string value);
    partial void On_4KB_Random_ReadChanged();
    partial void On_4KB_Random_WriteChanging(string value);
    partial void On_4KB_Random_WriteChanged();
    partial void OnSeek_TimeChanging(string value);
    partial void OnSeek_TimeChanged();
    partial void OnMTBFChanging(string value);
    partial void OnMTBFChanged();
    partial void OnOperating_TempChanging(string value);
    partial void OnOperating_TempChanged();
    partial void OnStorage_TempChanging(string value);
    partial void OnStorage_TempChanged();
    partial void OnIdle_Power_UsageChanging(string value);
    partial void OnIdle_Power_UsageChanged();
    partial void OnMax_Power_UsageChanging(string value);
    partial void OnMax_Power_UsageChanged();
    partial void OnWarrentyChanging(string value);
    partial void OnWarrentyChanged();
    #endregion
	
	public SSD()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this.OnBrandChanging(value);
				this.SendPropertyChanging();
				this._Brand = value;
				this.SendPropertyChanged("Brand");
				this.OnBrandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Series", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Series
	{
		get
		{
			return this._Series;
		}
		set
		{
			if ((this._Series != value))
			{
				this.OnSeriesChanging(value);
				this.SendPropertyChanging();
				this._Series = value;
				this.SendPropertyChanged("Series");
				this.OnSeriesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form_Factor", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Form_Factor
	{
		get
		{
			return this._Form_Factor;
		}
		set
		{
			if ((this._Form_Factor != value))
			{
				this.OnForm_FactorChanging(value);
				this.SendPropertyChanging();
				this._Form_Factor = value;
				this.SendPropertyChanged("Form_Factor");
				this.OnForm_FactorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Capacity
	{
		get
		{
			return this._Capacity;
		}
		set
		{
			if ((this._Capacity != value))
			{
				this.OnCapacityChanging(value);
				this.SendPropertyChanging();
				this._Capacity = value;
				this.SendPropertyChanged("Capacity");
				this.OnCapacityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interface", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Interface
	{
		get
		{
			return this._Interface;
		}
		set
		{
			if ((this._Interface != value))
			{
				this.OnInterfaceChanging(value);
				this.SendPropertyChanging();
				this._Interface = value;
				this.SendPropertyChanged("Interface");
				this.OnInterfaceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dimensions", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Dimensions
	{
		get
		{
			return this._Dimensions;
		}
		set
		{
			if ((this._Dimensions != value))
			{
				this.OnDimensionsChanging(value);
				this.SendPropertyChanging();
				this._Dimensions = value;
				this.SendPropertyChanged("Dimensions");
				this.OnDimensionsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Max_Sequential_Read", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Max_Sequential_Read
	{
		get
		{
			return this._Max_Sequential_Read;
		}
		set
		{
			if ((this._Max_Sequential_Read != value))
			{
				this.OnMax_Sequential_ReadChanging(value);
				this.SendPropertyChanging();
				this._Max_Sequential_Read = value;
				this.SendPropertyChanged("Max_Sequential_Read");
				this.OnMax_Sequential_ReadChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Max_Sequential_Write", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Max_Sequential_Write
	{
		get
		{
			return this._Max_Sequential_Write;
		}
		set
		{
			if ((this._Max_Sequential_Write != value))
			{
				this.OnMax_Sequential_WriteChanging(value);
				this.SendPropertyChanging();
				this._Max_Sequential_Write = value;
				this.SendPropertyChanged("Max_Sequential_Write");
				this.OnMax_Sequential_WriteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[4KB_Random_Read]", Storage="__4KB_Random_Read", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string _4KB_Random_Read
	{
		get
		{
			return this.@__4KB_Random_Read;
		}
		set
		{
			if ((this.@__4KB_Random_Read != value))
			{
				this.On_4KB_Random_ReadChanging(value);
				this.SendPropertyChanging();
				this.@__4KB_Random_Read = value;
				this.SendPropertyChanged("_4KB_Random_Read");
				this.On_4KB_Random_ReadChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[4KB_Random_Write]", Storage="__4KB_Random_Write", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string _4KB_Random_Write
	{
		get
		{
			return this.@__4KB_Random_Write;
		}
		set
		{
			if ((this.@__4KB_Random_Write != value))
			{
				this.On_4KB_Random_WriteChanging(value);
				this.SendPropertyChanging();
				this.@__4KB_Random_Write = value;
				this.SendPropertyChanged("_4KB_Random_Write");
				this.On_4KB_Random_WriteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seek_Time", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Seek_Time
	{
		get
		{
			return this._Seek_Time;
		}
		set
		{
			if ((this._Seek_Time != value))
			{
				this.OnSeek_TimeChanging(value);
				this.SendPropertyChanging();
				this._Seek_Time = value;
				this.SendPropertyChanged("Seek_Time");
				this.OnSeek_TimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTBF", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string MTBF
	{
		get
		{
			return this._MTBF;
		}
		set
		{
			if ((this._MTBF != value))
			{
				this.OnMTBFChanging(value);
				this.SendPropertyChanging();
				this._MTBF = value;
				this.SendPropertyChanged("MTBF");
				this.OnMTBFChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operating_Temp", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Operating_Temp
	{
		get
		{
			return this._Operating_Temp;
		}
		set
		{
			if ((this._Operating_Temp != value))
			{
				this.OnOperating_TempChanging(value);
				this.SendPropertyChanging();
				this._Operating_Temp = value;
				this.SendPropertyChanged("Operating_Temp");
				this.OnOperating_TempChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Storage_Temp", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Storage_Temp
	{
		get
		{
			return this._Storage_Temp;
		}
		set
		{
			if ((this._Storage_Temp != value))
			{
				this.OnStorage_TempChanging(value);
				this.SendPropertyChanging();
				this._Storage_Temp = value;
				this.SendPropertyChanged("Storage_Temp");
				this.OnStorage_TempChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Idle_Power_Usage", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Idle_Power_Usage
	{
		get
		{
			return this._Idle_Power_Usage;
		}
		set
		{
			if ((this._Idle_Power_Usage != value))
			{
				this.OnIdle_Power_UsageChanging(value);
				this.SendPropertyChanging();
				this._Idle_Power_Usage = value;
				this.SendPropertyChanged("Idle_Power_Usage");
				this.OnIdle_Power_UsageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Max_Power_Usage", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Max_Power_Usage
	{
		get
		{
			return this._Max_Power_Usage;
		}
		set
		{
			if ((this._Max_Power_Usage != value))
			{
				this.OnMax_Power_UsageChanging(value);
				this.SendPropertyChanging();
				this._Max_Power_Usage = value;
				this.SendPropertyChanged("Max_Power_Usage");
				this.OnMax_Power_UsageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warrenty", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Warrenty
	{
		get
		{
			return this._Warrenty;
		}
		set
		{
			if ((this._Warrenty != value))
			{
				this.OnWarrentyChanging(value);
				this.SendPropertyChanging();
				this._Warrenty = value;
				this.SendPropertyChanged("Warrenty");
				this.OnWarrentyChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
